Return-Path: <io-uring+bounces-941-lists+io-uring=lfdr.de@vger.kernel.org>
X-Original-To: lists+io-uring@lfdr.de
Delivered-To: lists+io-uring@lfdr.de
Received: from am.mirrors.kernel.org (am.mirrors.kernel.org [IPv6:2604:1380:4601:e00::3])
	by mail.lfdr.de (Postfix) with ESMTPS id A069687B5DC
	for <lists+io-uring@lfdr.de>; Thu, 14 Mar 2024 01:40:44 +0100 (CET)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by am.mirrors.kernel.org (Postfix) with ESMTPS id E2DA31F2349C
	for <lists+io-uring@lfdr.de>; Thu, 14 Mar 2024 00:40:43 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id EBEFEA31;
	Thu, 14 Mar 2024 00:40:37 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel-dk.20230601.gappssmtp.com header.i=@kernel-dk.20230601.gappssmtp.com header.b="LO35IqE9"
X-Original-To: io-uring@vger.kernel.org
Received: from mail-pg1-f177.google.com (mail-pg1-f177.google.com [209.85.215.177])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BE4061FB4
	for <io-uring@vger.kernel.org>; Thu, 14 Mar 2024 00:40:32 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.215.177
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1710376837; cv=none; b=Co1pY6oLSesFDyzLjcgrsR2xOQ2WlDS4kaSqyGBHLqGwSTPBycz+tOA8EOT7D5xrnTAv/BIv/P7icHdKe1Cx0EkugxDs+F3tgYenP/2LYygovJ2cYjtyYh0SBugwQDdZYSMZ0Ojl45yz/J4q9xS010Ygz9pt+dn8rM502NBSg7c=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1710376837; c=relaxed/simple;
	bh=AorXyXizjR0t5Viwe3dVvgB6M9Sua4ta0f3d/PsRXOQ=;
	h=Content-Type:Message-ID:Date:MIME-Version:Subject:To:Cc:
	 References:From:In-Reply-To; b=C8TD3oJusaJn+P0hRdr9IDdXY0LwJo8P0Le37yvf898BC38lNg3NJH5UcE87inFZKrJUF7Vy8fOkb+J2H1PJsAdeeBSUene990X3FFg3jdPz4YlP8Z6D4YN0i/qIV9TJJ6cDZh8oyneqo6iWD8EO9JfNAFdh3MzvMeB6R8V5W/M=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=kernel.dk; spf=pass smtp.mailfrom=kernel.dk; dkim=pass (2048-bit key) header.d=kernel-dk.20230601.gappssmtp.com header.i=@kernel-dk.20230601.gappssmtp.com header.b=LO35IqE9; arc=none smtp.client-ip=209.85.215.177
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=kernel.dk
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=kernel.dk
Received: by mail-pg1-f177.google.com with SMTP id 41be03b00d2f7-55b5a37acb6so105791a12.0
        for <io-uring@vger.kernel.org>; Wed, 13 Mar 2024 17:40:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=kernel-dk.20230601.gappssmtp.com; s=20230601; t=1710376832; x=1710981632; darn=vger.kernel.org;
        h=in-reply-to:from:references:cc:to:content-language:subject
         :user-agent:mime-version:date:message-id:from:to:cc:subject:date
         :message-id:reply-to;
        bh=EbFjVrF2gsv3vOnsMyNlnq1eGsoQRPGLO18t1avAmCY=;
        b=LO35IqE9errzcYQqCipVj1/8GEKzk241ZnvbydVGkQkDwEEaTbtXHQH9Nro72uZGbk
         oZ4vFEbG9cLI9xAdTQExxzTPdtAytj7wqblUf/G3IuSJt6z7gbLuC1Hg5nJ05BVN5yko
         YS8yeUch+ngMzjHmTrWPsda7Hw4NQ+8VZgp3r/cCsy78TKfgHmGNtA/30M7DpyiSL7vY
         wSqkFhtVbz3WhiTimmKB0uGwqPigsGLvIviXdw/4EyXWvhTSLosFS5y1vPPRv/UUaTPP
         L86MKjq0u9NbqyZLB9G5SMATKan6Ey7dmYNHeDU5ZWXQeRrLbUO84jhZm3YxQ0d+SD92
         +cKA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1710376832; x=1710981632;
        h=in-reply-to:from:references:cc:to:content-language:subject
         :user-agent:mime-version:date:message-id:x-gm-message-state:from:to
         :cc:subject:date:message-id:reply-to;
        bh=EbFjVrF2gsv3vOnsMyNlnq1eGsoQRPGLO18t1avAmCY=;
        b=czUWRf8fBfbTo1dkdSyHX6FXO65NyUyf4XqQK64XC1m8GmgiDjKW+IMOtAb6/CCiY7
         KKoDZuWK6aPK1fZYjUZrlgnLVscgXzQwbWflux29l0arRjmFyNe4gP5fx1GJwqHsglpu
         jOrHttjGa5onxPc9gEec48dJ6ehHmJ6XyhDy7H1xyese8QKLeEos9cG3tiR3J9VHLYp/
         tnyQmuwjhmUM6oDnR+Hv4jPUZy44b6g1o62kO60QzgtK1epQwaI8dXchchJtYE5/gNY5
         UyWRWD9iYnPOhtMJuqOSVHfWAwLvewqjSlNE2GsJPr3KFMv6OMT/YeA58X8Vw0e7wEt0
         4Buw==
X-Forwarded-Encrypted: i=1; AJvYcCUTPA9QeiUpTmxYv+7nhg1c71DkgnrTsmV9x/VlkNCdbsESbPYJTEdOiHUJLhnaIwotv7eP0mMhVS7FNFebg7CwI2wJCct4s50=
X-Gm-Message-State: AOJu0YywGzTkpw5rdIFQcFVw7kTXXIr7dqEgSRbPwrsYfGNAXEz2JIdc
	PgsEWkN3w3DUJMy109TaSmyR8VCWoK5/T89zRgt7IilFF++cvZ3ibGzVWtTJ59o=
X-Google-Smtp-Source: AGHT+IHhVM9OumMSuEbo4AASXAQ9xKsrUbQFjJRviLUa51lbTQBzQjwmIMFyyC4PdVVdnTSz10+qqw==
X-Received: by 2002:a17:902:eccf:b0:1dd:3309:7a99 with SMTP id a15-20020a170902eccf00b001dd33097a99mr434146plh.2.1710376831691;
        Wed, 13 Mar 2024 17:40:31 -0700 (PDT)
Received: from [192.168.1.150] ([198.8.77.194])
        by smtp.gmail.com with ESMTPSA id p9-20020a1709027ec900b001dd5a0a20d6sm230970plb.287.2024.03.13.17.40.30
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Wed, 13 Mar 2024 17:40:30 -0700 (PDT)
Content-Type: multipart/mixed; boundary="------------rOU1oqdtodmFhQqFExsoYY2u"
Message-ID: <3f17f1d9-9029-4d03-9b0a-9c500cce54e9@kernel.dk>
Date: Wed, 13 Mar 2024 18:40:29 -0600
Precedence: bulk
X-Mailing-List: io-uring@vger.kernel.org
List-Id: <io-uring.vger.kernel.org>
List-Subscribe: <mailto:io-uring+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:io-uring+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH 5.10/5.15] io_uring: fix registered files leak
Content-Language: en-US
To: Fedor Pchelkin <pchelkin@ispras.ru>
Cc: Pavel Begunkov <asml.silence@gmail.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>, stable@vger.kernel.org,
 io-uring@vger.kernel.org, linux-kernel@vger.kernel.org,
 Alexey Khoroshilov <khoroshilov@ispras.ru>, lvc-project@linuxtesting.org,
 Nikita Zhandarovich <n.zhandarovich@fintech.ru>,
 Roman Belyaev <belyaevrd@yandex.ru>
References: <20240312142313.3436-1-pchelkin@ispras.ru>
 <8a9993c7-fd4d-44ff-8971-af59c7f3052c@kernel.dk>
 <466e842f-66c6-4530-8c16-2b008fc3fbc6-pchelkin@ispras.ru>
 <fb57be64-4da6-418b-9369-eae0db42a570@kernel.dk>
 <085beb85-d1a4-4cb0-969b-e0f895a95738@kernel.dk>
 <a8c81d35-e6ac-420c-9ffa-24dd9e009e29-pchelkin@ispras.ru>
From: Jens Axboe <axboe@kernel.dk>
In-Reply-To: <a8c81d35-e6ac-420c-9ffa-24dd9e009e29-pchelkin@ispras.ru>

This is a multi-part message in MIME format.
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi,

OK, here they are. Two patches attached for every stable kernel, that
gets rid of the remnants of the SCM related code:

5.4
5.10 and 5.15 (same patches)
6.1
6.6
6.7

Would appreciate if Fedor and Pavel could give them a once over, but I
think they are all fine. It's just deleting the code...

Barring no complaints, Greg can you queue them up? Thanks!

-- 
Jens Axboe

--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="5.4-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Disposition: attachment;
 filename*0="5.4-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Transfer-Encoding: base64

RnJvbSA1M2U5ZTBjZWQ0ZTQxNDZmZjU3NjM1YzhlZTY1YTU3ZjNlZDMzZmUzIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFdlZCwgMTMgTWFyIDIwMjQgMTg6MzM6NDggLTA2MDAKU3ViamVjdDogW1BBVENIIDEv
Ml0gaW9fdXJpbmcvdW5peDogZHJvcCB1c2FnZSBvZiBpb191cmluZyBzb2NrZXQKCkNvbW1p
dCBhNDEwNDgyMWFkNjUxZDhhMGIzNzRmMGIyNDc0YzM0NWJiYjQyZjgyIHVwc3RyZWFtLgoK
U2luY2Ugd2Ugbm8gbG9uZ2VyIGFsbG93IHNlbmRpbmcgaW9fdXJpbmcgZmRzIG92ZXIgU0NN
X1JJR0hUUywgbW92ZSB0bwp1c2luZyBpb19pc191cmluZ19mb3BzKCkgdG8gZGV0ZWN0IHdo
ZXRoZXIgdGhpcyBpcyBhIGlvX3VyaW5nIGZkIG9yIG5vdC4KV2l0aCB0aGF0IGRvbmUsIGtp
bGwgb2ZmIGlvX3VyaW5nX2dldF9zb2NrZXQoKSBhcyBub2JvZHkgY2FsbHMgaXQKYW55bW9y
ZS4KClRoaXMgaXMgaW4gcHJlcGFyYXRpb24gdG8geWFua2luZyBvdXQgdGhlIHJlc3Qgb2Yg
dGhlIGNvcmUgcmVsYXRlZCB0bwp1bml4IGdjIHdpdGggaW9fdXJpbmcuCgpTaWduZWQtb2Zm
LWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogZnMvaW9fdXJpbmcuYyAg
ICAgIHwgMTggKysrKystLS0tLS0tLS0tLS0tCiBpbmNsdWRlL2xpbnV4L2ZzLmggfCAgNiAr
KystLS0KIG5ldC9jb3JlL3NjbS5jICAgICB8ICAyICstCiBuZXQvdW5peC9zY20uYyAgICAg
fCAgNCArLS0tCiA0IGZpbGVzIGNoYW5nZWQsIDEwIGluc2VydGlvbnMoKyksIDIwIGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2ZzL2lvX3VyaW5nLmMgYi9mcy9pb191cmluZy5jCmlu
ZGV4IDlkZTg5NjE3NjNiMC4uY2QxODU4Y2M2MzIwIDEwMDY0NAotLS0gYS9mcy9pb191cmlu
Zy5jCisrKyBiL2ZzL2lvX3VyaW5nLmMKQEAgLTM4MSwxOSArMzgxLDYgQEAgc3RhdGljIHN0
cnVjdCBrbWVtX2NhY2hlICpyZXFfY2FjaGVwOwogCiBzdGF0aWMgY29uc3Qgc3RydWN0IGZp
bGVfb3BlcmF0aW9ucyBpb191cmluZ19mb3BzOwogCi1zdHJ1Y3Qgc29jayAqaW9fdXJpbmdf
Z2V0X3NvY2tldChzdHJ1Y3QgZmlsZSAqZmlsZSkKLXsKLSNpZiBkZWZpbmVkKENPTkZJR19V
TklYKQotCWlmIChmaWxlLT5mX29wID09ICZpb191cmluZ19mb3BzKSB7Ci0JCXN0cnVjdCBp
b19yaW5nX2N0eCAqY3R4ID0gZmlsZS0+cHJpdmF0ZV9kYXRhOwotCi0JCXJldHVybiBjdHgt
PnJpbmdfc29jay0+c2s7Ci0JfQotI2VuZGlmCi0JcmV0dXJuIE5VTEw7Ci19Ci1FWFBPUlRf
U1lNQk9MKGlvX3VyaW5nX2dldF9zb2NrZXQpOwotCiBzdGF0aWMgdm9pZCBpb19yaW5nX2N0
eF9yZWZfZnJlZShzdHJ1Y3QgcGVyY3B1X3JlZiAqcmVmKQogewogCXN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4ID0gY29udGFpbmVyX29mKHJlZiwgc3RydWN0IGlvX3JpbmdfY3R4LCByZWZz
KTsKQEAgLTM3OTQsNiArMzc4MSwxMSBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGZpbGVfb3Bl
cmF0aW9ucyBpb191cmluZ19mb3BzID0gewogCS5mYXN5bmMJCT0gaW9fdXJpbmdfZmFzeW5j
LAogfTsKIAorYm9vbCBpb19pc191cmluZ19mb3BzKHN0cnVjdCBmaWxlICpmaWxlKQorewor
CXJldHVybiBmaWxlLT5mX29wID09ICZpb191cmluZ19mb3BzOworfQorCiBzdGF0aWMgaW50
IGlvX2FsbG9jYXRlX3NjcV91cmluZ3Moc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsCiAJCQkJ
ICBzdHJ1Y3QgaW9fdXJpbmdfcGFyYW1zICpwKQogewpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9s
aW51eC9mcy5oIGIvaW5jbHVkZS9saW51eC9mcy5oCmluZGV4IGUwMDliNTJhYjZiMC4uMjcy
ZjI2MTg5NGIxIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2ZzLmgKKysrIGIvaW5jbHVk
ZS9saW51eC9mcy5oCkBAIC0zNjE0LDExICszNjE0LDExIEBAIGV4dGVybiBpbnQgZ2VuZXJp
Y19mYWR2aXNlKHN0cnVjdCBmaWxlICpmaWxlLCBsb2ZmX3Qgb2Zmc2V0LCBsb2ZmX3QgbGVu
LAogCQkJICAgaW50IGFkdmljZSk7CiAKICNpZiBkZWZpbmVkKENPTkZJR19JT19VUklORykK
LWV4dGVybiBzdHJ1Y3Qgc29jayAqaW9fdXJpbmdfZ2V0X3NvY2tldChzdHJ1Y3QgZmlsZSAq
ZmlsZSk7Citib29sIGlvX2lzX3VyaW5nX2ZvcHMoc3RydWN0IGZpbGUgKmZpbGUpOwogI2Vs
c2UKLXN0YXRpYyBpbmxpbmUgc3RydWN0IHNvY2sgKmlvX3VyaW5nX2dldF9zb2NrZXQoc3Ry
dWN0IGZpbGUgKmZpbGUpCitzdGF0aWMgaW5saW5lIGJvb2wgaW9faXNfdXJpbmdfZm9wcyhz
dHJ1Y3QgZmlsZSAqZmlsZSkKIHsKLQlyZXR1cm4gTlVMTDsKKwlyZXR1cm4gZmFsc2U7CiB9
CiAjZW5kaWYKIApkaWZmIC0tZ2l0IGEvbmV0L2NvcmUvc2NtLmMgYi9uZXQvY29yZS9zY20u
YwppbmRleCA1NTI1YzE0ZjMzZjEuLmE0NDJiZjYzY2Q0OCAxMDA2NDQKLS0tIGEvbmV0L2Nv
cmUvc2NtLmMKKysrIGIvbmV0L2NvcmUvc2NtLmMKQEAgLTEwNSw3ICsxMDUsNyBAQCBzdGF0
aWMgaW50IHNjbV9mcF9jb3B5KHN0cnVjdCBjbXNnaGRyICpjbXNnLCBzdHJ1Y3Qgc2NtX2Zw
X2xpc3QgKipmcGxwKQogCQlpZiAoZmQgPCAwIHx8ICEoZmlsZSA9IGZnZXRfcmF3KGZkKSkp
CiAJCQlyZXR1cm4gLUVCQURGOwogCQkvKiBkb24ndCBhbGxvdyBpb191cmluZyBmaWxlcyAq
LwotCQlpZiAoaW9fdXJpbmdfZ2V0X3NvY2tldChmaWxlKSkgeworCQlpZiAoaW9faXNfdXJp
bmdfZm9wcyhmaWxlKSkgewogCQkJZnB1dChmaWxlKTsKIAkJCXJldHVybiAtRUlOVkFMOwog
CQl9CmRpZmYgLS1naXQgYS9uZXQvdW5peC9zY20uYyBiL25ldC91bml4L3NjbS5jCmluZGV4
IGU4ODFhNmU3OGFmNS4uNTFiNjIzZGUzYmU1IDEwMDY0NAotLS0gYS9uZXQvdW5peC9zY20u
YworKysgYi9uZXQvdW5peC9zY20uYwpAQCAtMzMsMTAgKzMzLDggQEAgc3RydWN0IHNvY2sg
KnVuaXhfZ2V0X3NvY2tldChzdHJ1Y3QgZmlsZSAqZmlscCkKIAkJLyogUEZfVU5JWCA/ICov
CiAJCWlmIChzICYmIHNvY2stPm9wcyAmJiBzb2NrLT5vcHMtPmZhbWlseSA9PSBQRl9VTklY
KQogCQkJdV9zb2NrID0gczsKLQl9IGVsc2UgewotCQkvKiBDb3VsZCBiZSBhbiBpb191cmlu
ZyBpbnN0YW5jZSAqLwotCQl1X3NvY2sgPSBpb191cmluZ19nZXRfc29ja2V0KGZpbHApOwog
CX0KKwogCXJldHVybiB1X3NvY2s7CiB9CiBFWFBPUlRfU1lNQk9MKHVuaXhfZ2V0X3NvY2tl
dCk7Ci0tIAoyLjQzLjAKCg==
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="5.4-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Disposition: attachment;
 filename*0="5.4-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Transfer-Encoding: base64

RnJvbSBhMjFkMzdiZTgxZjhkYzU5ZDRjZGE0YWFjMzczMTJmMDc3NGU0YjcxIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFdlZCwgMTMgTWFyIDIwMjQgMTg6MzY6MTggLTA2MDAKU3ViamVjdDogW1BBVENIIDIv
Ml0gaW9fdXJpbmc6IGRyb3AgYW55IGNvZGUgcmVsYXRlZCB0byBTQ01fUklHSFRTCgpDb21t
aXQgNmU1ZTZkMjc0OTU2MzA1ZjFmYzAzNDA1MjJiMzhmNWY1YmU3NGJkYiB1cHN0cmVhbS4K
ClRoaXMgaXMgZGVhZCBjb2RlIGFmdGVyIHdlIGRyb3BwZWQgc3VwcG9ydCBmb3IgcGFzc2lu
ZyBpb191cmluZyBmZHMKb3ZlciBTQ01fUklHSFRTLCBnZXQgcmlkIG9mIGl0LgoKU2lnbmVk
LW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGZzL2lvX3VyaW5n
LmMgfCA0NyArKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LQogMSBmaWxlIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucygrKSwgNDQgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvZnMvaW9fdXJpbmcuYyBiL2ZzL2lvX3VyaW5nLmMKaW5kZXggY2QxODU4
Y2M2MzIwLi4yYzc5M2U0Y2NmMDkgMTAwNjQ0Ci0tLSBhL2ZzL2lvX3VyaW5nLmMKKysrIGIv
ZnMvaW9fdXJpbmcuYwpAQCAtNjMsNyArNjMsNiBAQAogI2luY2x1ZGUgPGxpbnV4L25ldC5o
PgogI2luY2x1ZGUgPG5ldC9zb2NrLmg+CiAjaW5jbHVkZSA8bmV0L2FmX3VuaXguaD4KLSNp
bmNsdWRlIDxuZXQvc2NtLmg+CiAjaW5jbHVkZSA8bGludXgvYW5vbl9pbm9kZXMuaD4KICNp
bmNsdWRlIDxsaW51eC9zY2hlZC9tbS5oPgogI2luY2x1ZGUgPGxpbnV4L3VhY2Nlc3MuaD4K
QEAgLTI2NCwxMCArMjYzLDYgQEAgc3RydWN0IGlvX3JpbmdfY3R4IHsKIAogCXN0cnVjdCBh
c3luY19saXN0CXBlbmRpbmdfYXN5bmNbMl07CiAKLSNpZiBkZWZpbmVkKENPTkZJR19VTklY
KQotCXN0cnVjdCBzb2NrZXQJCSpyaW5nX3NvY2s7Ci0jZW5kaWYKLQogCXN0cnVjdCBsaXN0
X2hlYWQJdGFza19saXN0OwogCXNwaW5sb2NrX3QJCXRhc2tfbG9jazsKIH07CkBAIC0zMDY3
LDIwICszMDYyLDEwIEBAIHN0YXRpYyBpbnQgaW9fY3FyaW5nX3dhaXQoc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHgsIGludCBtaW5fZXZlbnRzLAogCiBzdGF0aWMgdm9pZCBfX2lvX3NxZV9m
aWxlc191bnJlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogewotI2lmIGRlZmlu
ZWQoQ09ORklHX1VOSVgpCi0JaWYgKGN0eC0+cmluZ19zb2NrKSB7Ci0JCXN0cnVjdCBzb2Nr
ICpzb2NrID0gY3R4LT5yaW5nX3NvY2stPnNrOwotCQlzdHJ1Y3Qgc2tfYnVmZiAqc2tiOwot
Ci0JCXdoaWxlICgoc2tiID0gc2tiX2RlcXVldWUoJnNvY2stPnNrX3JlY2VpdmVfcXVldWUp
KSAhPSBOVUxMKQotCQkJa2ZyZWVfc2tiKHNrYik7Ci0JfQotI2Vsc2UKIAlpbnQgaTsKIAog
CWZvciAoaSA9IDA7IGkgPCBjdHgtPm5yX3VzZXJfZmlsZXM7IGkrKykKIAkJZnB1dChjdHgt
PnVzZXJfZmlsZXNbaV0pOwotI2VuZGlmCiB9CiAKIHN0YXRpYyBpbnQgaW9fc3FlX2ZpbGVz
X3VucmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCkBAIC0zNTc1LDEzICszNTYw
LDYgQEAgc3RhdGljIHZvaWQgaW9fcmluZ19jdHhfZnJlZShzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCkKIAlpb19zcWVfZmlsZXNfdW5yZWdpc3RlcihjdHgpOwogCWlvX2V2ZW50ZmRfdW5y
ZWdpc3RlcihjdHgpOwogCi0jaWYgZGVmaW5lZChDT05GSUdfVU5JWCkKLQlpZiAoY3R4LT5y
aW5nX3NvY2spIHsKLQkJY3R4LT5yaW5nX3NvY2stPmZpbGUgPSBOVUxMOyAvKiBzbyB0aGF0
IGlwdXQoKSBpcyBjYWxsZWQgKi8KLQkJc29ja19yZWxlYXNlKGN0eC0+cmluZ19zb2NrKTsK
LQl9Ci0jZW5kaWYKLQogCWlvX21lbV9mcmVlKGN0eC0+cmluZ3MpOwogCWlvX21lbV9mcmVl
KGN0eC0+c3Ffc3Flcyk7CiAKQEAgLTM4MzMsNDUgKzM4MTEsMjYgQEAgc3RhdGljIGludCBp
b19hbGxvY2F0ZV9zY3FfdXJpbmdzKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LAogLyoKICAq
IEFsbG9jYXRlIGFuIGFub255bW91cyBmZCwgdGhpcyBpcyB3aGF0IGNvbnN0aXR1dGVzIHRo
ZSBhcHBsaWNhdGlvbgogICogdmlzaWJsZSBiYWNraW5nIG9mIGFuIGlvX3VyaW5nIGluc3Rh
bmNlLiBUaGUgYXBwbGljYXRpb24gbW1hcHMgdGhpcwotICogZmQgdG8gZ2FpbiBhY2Nlc3Mg
dG8gdGhlIFNRL0NRIHJpbmcgZGV0YWlscy4gSWYgVU5JWCBzb2NrZXRzIGFyZSBlbmFibGVk
LAotICogd2UgaGF2ZSB0byB0aWUgdGhpcyBmZCB0byBhIHNvY2tldCBmb3IgZmlsZSBnYXJi
YWdlIGNvbGxlY3Rpb24gcHVycG9zZXMuCisgKiBmZCB0byBnYWluIGFjY2VzcyB0byB0aGUg
U1EvQ1EgcmluZyBkZXRhaWxzLgogICovCiBzdGF0aWMgaW50IGlvX3VyaW5nX2dldF9mZChz
dHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIHsKIAlzdHJ1Y3QgZmlsZSAqZmlsZTsKIAlpbnQg
cmV0OwogCi0jaWYgZGVmaW5lZChDT05GSUdfVU5JWCkKLQlyZXQgPSBzb2NrX2NyZWF0ZV9r
ZXJuKCZpbml0X25ldCwgUEZfVU5JWCwgU09DS19SQVcsIElQUFJPVE9fSVAsCi0JCQkJJmN0
eC0+cmluZ19zb2NrKTsKLQlpZiAocmV0KQotCQlyZXR1cm4gcmV0OwotI2VuZGlmCi0KIAly
ZXQgPSBnZXRfdW51c2VkX2ZkX2ZsYWdzKE9fUkRXUiB8IE9fQ0xPRVhFQyk7CiAJaWYgKHJl
dCA8IDApCi0JCWdvdG8gZXJyOworCQlyZXR1cm4gcmV0OwogCiAJZmlsZSA9IGFub25faW5v
ZGVfZ2V0ZmlsZSgiW2lvX3VyaW5nXSIsICZpb191cmluZ19mb3BzLCBjdHgsCiAJCQkJCU9f
UkRXUiB8IE9fQ0xPRVhFQyk7CiAJaWYgKElTX0VSUihmaWxlKSkgewogCQlwdXRfdW51c2Vk
X2ZkKHJldCk7Ci0JCXJldCA9IFBUUl9FUlIoZmlsZSk7Ci0JCWdvdG8gZXJyOworCQlyZXR1
cm4gUFRSX0VSUihmaWxlKTsKIAl9CiAKLSNpZiBkZWZpbmVkKENPTkZJR19VTklYKQotCWN0
eC0+cmluZ19zb2NrLT5maWxlID0gZmlsZTsKLQljdHgtPnJpbmdfc29jay0+c2stPnNrX3Vz
ZXJfZGF0YSA9IGN0eDsKLSNlbmRpZgogCWZkX2luc3RhbGwocmV0LCBmaWxlKTsKIAlyZXR1
cm4gcmV0OwotZXJyOgotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0Jc29ja19yZWxlYXNl
KGN0eC0+cmluZ19zb2NrKTsKLQljdHgtPnJpbmdfc29jayA9IE5VTEw7Ci0jZW5kaWYKLQly
ZXR1cm4gcmV0OwogfQogCiBzdGF0aWMgaW50IGlvX3VyaW5nX2NyZWF0ZSh1bnNpZ25lZCBl
bnRyaWVzLCBzdHJ1Y3QgaW9fdXJpbmdfcGFyYW1zICpwKQotLSAKMi40My4wCgo=
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="6.7-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Disposition: attachment;
 filename*0="6.7-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Transfer-Encoding: base64

RnJvbSAyNWIwNjQ1YWZlNjQ1OTQzN2RhNmNmZjcxNTQ2OTg0NTk3ZjIwOWRhIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFR1ZSwgMTkgRGVjIDIwMjMgMTI6MzA6NDMgLTA3MDAKU3ViamVjdDogW1BBVENIIDEv
Ml0gaW9fdXJpbmcvdW5peDogZHJvcCB1c2FnZSBvZiBpb191cmluZyBzb2NrZXQKCkNvbW1p
dCBhNDEwNDgyMWFkNjUxZDhhMGIzNzRmMGIyNDc0YzM0NWJiYjQyZjgyIHVwc3RyZWFtLgoK
U2luY2Ugd2Ugbm8gbG9uZ2VyIGFsbG93IHNlbmRpbmcgaW9fdXJpbmcgZmRzIG92ZXIgU0NN
X1JJR0hUUywgbW92ZSB0bwp1c2luZyBpb19pc191cmluZ19mb3BzKCkgdG8gZGV0ZWN0IHdo
ZXRoZXIgdGhpcyBpcyBhIGlvX3VyaW5nIGZkIG9yIG5vdC4KV2l0aCB0aGF0IGRvbmUsIGtp
bGwgb2ZmIGlvX3VyaW5nX2dldF9zb2NrZXQoKSBhcyBub2JvZHkgY2FsbHMgaXQKYW55bW9y
ZS4KClRoaXMgaXMgaW4gcHJlcGFyYXRpb24gdG8geWFua2luZyBvdXQgdGhlIHJlc3Qgb2Yg
dGhlIGNvcmUgcmVsYXRlZCB0bwp1bml4IGdjIHdpdGggaW9fdXJpbmcuCgpTaWduZWQtb2Zm
LWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogaW5jbHVkZS9saW51eC9p
b191cmluZy5oIHwgIDkgKysrKystLS0tCiBpb191cmluZy9pb191cmluZy5jICAgICAgfCAx
MyAtLS0tLS0tLS0tLS0tCiBpb191cmluZy9pb191cmluZy5oICAgICAgfCAgMSAtCiBuZXQv
Y29yZS9zY20uYyAgICAgICAgICAgfCAgMiArLQogbmV0L3VuaXgvc2NtLmMgICAgICAgICAg
IHwgIDQgKy0tLQogNSBmaWxlcyBjaGFuZ2VkLCA3IGluc2VydGlvbnMoKyksIDIyIGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvaW9fdXJpbmcuaCBiL2luY2x1
ZGUvbGludXgvaW9fdXJpbmcuaAppbmRleCBhZWZiNzNlZWVlYmYuLmIzYTMyNjg3ZjUxNCAx
MDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9pb191cmluZy5oCisrKyBiL2luY2x1ZGUvbGlu
dXgvaW9fdXJpbmcuaApAQCAtOTMsNiArOTMsNyBAQCBpbnQgaW9fdXJpbmdfY21kX3NvY2so
c3RydWN0IGlvX3VyaW5nX2NtZCAqY21kLCB1bnNpZ25lZCBpbnQgaXNzdWVfZmxhZ3MpOwog
dm9pZCBpb191cmluZ19jbWRfbWFya19jYW5jZWxhYmxlKHN0cnVjdCBpb191cmluZ19jbWQg
KmNtZCwKIAkJdW5zaWduZWQgaW50IGlzc3VlX2ZsYWdzKTsKIHN0cnVjdCB0YXNrX3N0cnVj
dCAqaW9fdXJpbmdfY21kX2dldF90YXNrKHN0cnVjdCBpb191cmluZ19jbWQgKmNtZCk7Citi
b29sIGlvX2lzX3VyaW5nX2ZvcHMoc3RydWN0IGZpbGUgKmZpbGUpOwogI2Vsc2UKIHN0YXRp
YyBpbmxpbmUgaW50IGlvX3VyaW5nX2NtZF9pbXBvcnRfZml4ZWQodTY0IHVidWYsIHVuc2ln
bmVkIGxvbmcgbGVuLCBpbnQgcncsCiAJCQkgICAgICBzdHJ1Y3QgaW92X2l0ZXIgKml0ZXIs
IHZvaWQgKmlvdWNtZCkKQEAgLTExMSwxMCArMTEyLDYgQEAgc3RhdGljIGlubGluZSB2b2lk
IGlvX3VyaW5nX2NtZF9kb19pbl90YXNrX2xhenkoc3RydWN0IGlvX3VyaW5nX2NtZCAqaW91
Y21kLAogCQkJdm9pZCAoKnRhc2tfd29ya19jYikoc3RydWN0IGlvX3VyaW5nX2NtZCAqLCB1
bnNpZ25lZCkpCiB7CiB9Ci1zdGF0aWMgaW5saW5lIHN0cnVjdCBzb2NrICppb191cmluZ19n
ZXRfc29ja2V0KHN0cnVjdCBmaWxlICpmaWxlKQotewotCXJldHVybiBOVUxMOwotfQogc3Rh
dGljIGlubGluZSB2b2lkIGlvX3VyaW5nX3Rhc2tfY2FuY2VsKHZvaWQpCiB7CiB9CkBAIC0x
NDEsNiArMTM4LDEwIEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHRhc2tfc3RydWN0ICppb191
cmluZ19jbWRfZ2V0X3Rhc2soc3RydWN0IGlvX3VyaW5nX2NtZCAqY21kCiB7CiAJcmV0dXJu
IE5VTEw7CiB9CitzdGF0aWMgaW5saW5lIGJvb2wgaW9faXNfdXJpbmdfZm9wcyhzdHJ1Y3Qg
ZmlsZSAqZmlsZSkKK3sKKwlyZXR1cm4gZmFsc2U7Cit9CiAjZW5kaWYKIAogI2VuZGlmCmRp
ZmYgLS1naXQgYS9pb191cmluZy9pb191cmluZy5jIGIvaW9fdXJpbmcvaW9fdXJpbmcuYwpp
bmRleCA1OWY1NzkxYzkwYzMuLjA2YmQ4Nzk1YTg3ZCAxMDA2NDQKLS0tIGEvaW9fdXJpbmcv
aW9fdXJpbmcuYworKysgYi9pb191cmluZy9pb191cmluZy5jCkBAIC0xNzcsMTkgKzE3Nyw2
IEBAIHN0YXRpYyBzdHJ1Y3QgY3RsX3RhYmxlIGtlcm5lbF9pb191cmluZ19kaXNhYmxlZF90
YWJsZVtdID0gewogfTsKICNlbmRpZgogCi1zdHJ1Y3Qgc29jayAqaW9fdXJpbmdfZ2V0X3Nv
Y2tldChzdHJ1Y3QgZmlsZSAqZmlsZSkKLXsKLSNpZiBkZWZpbmVkKENPTkZJR19VTklYKQot
CWlmIChpb19pc191cmluZ19mb3BzKGZpbGUpKSB7Ci0JCXN0cnVjdCBpb19yaW5nX2N0eCAq
Y3R4ID0gZmlsZS0+cHJpdmF0ZV9kYXRhOwotCi0JCXJldHVybiBjdHgtPnJpbmdfc29jay0+
c2s7Ci0JfQotI2VuZGlmCi0JcmV0dXJuIE5VTEw7Ci19Ci1FWFBPUlRfU1lNQk9MKGlvX3Vy
aW5nX2dldF9zb2NrZXQpOwotCiBzdGF0aWMgaW5saW5lIHZvaWQgaW9fc3VibWl0X2ZsdXNo
X2NvbXBsZXRpb25zKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogewogCWlmICghd3FfbGlz
dF9lbXB0eSgmY3R4LT5zdWJtaXRfc3RhdGUuY29tcGxfcmVxcykgfHwKZGlmZiAtLWdpdCBh
L2lvX3VyaW5nL2lvX3VyaW5nLmggYi9pb191cmluZy9pb191cmluZy5oCmluZGV4IGM5OTky
Y2Q3ZjEzOC4uMGQ2NmE3MDU4ZGJlIDEwMDY0NAotLS0gYS9pb191cmluZy9pb191cmluZy5o
CisrKyBiL2lvX3VyaW5nL2lvX3VyaW5nLmgKQEAgLTYxLDcgKzYxLDYgQEAgc3RydWN0IGZp
bGUgKmlvX2ZpbGVfZ2V0X2ZpeGVkKHN0cnVjdCBpb19raW9jYiAqcmVxLCBpbnQgZmQsCiAJ
CQkgICAgICAgdW5zaWduZWQgaXNzdWVfZmxhZ3MpOwogCiB2b2lkIF9faW9fcmVxX3Rhc2tf
d29ya19hZGQoc3RydWN0IGlvX2tpb2NiICpyZXEsIHVuc2lnbmVkIGZsYWdzKTsKLWJvb2wg
aW9faXNfdXJpbmdfZm9wcyhzdHJ1Y3QgZmlsZSAqZmlsZSk7CiBib29sIGlvX2FsbG9jX2Fz
eW5jX2RhdGEoc3RydWN0IGlvX2tpb2NiICpyZXEpOwogdm9pZCBpb19yZXFfdGFza19xdWV1
ZShzdHJ1Y3QgaW9fa2lvY2IgKnJlcSk7CiB2b2lkIGlvX3F1ZXVlX2lvd3Eoc3RydWN0IGlv
X2tpb2NiICpyZXEsIHN0cnVjdCBpb190d19zdGF0ZSAqdHNfZG9udF91c2UpOwpkaWZmIC0t
Z2l0IGEvbmV0L2NvcmUvc2NtLmMgYi9uZXQvY29yZS9zY20uYwppbmRleCA3ZGM0N2MxN2Q4
NjMuLjczNzkxN2M3YWM2MiAxMDA2NDQKLS0tIGEvbmV0L2NvcmUvc2NtLmMKKysrIGIvbmV0
L2NvcmUvc2NtLmMKQEAgLTEwNSw3ICsxMDUsNyBAQCBzdGF0aWMgaW50IHNjbV9mcF9jb3B5
KHN0cnVjdCBjbXNnaGRyICpjbXNnLCBzdHJ1Y3Qgc2NtX2ZwX2xpc3QgKipmcGxwKQogCQlp
ZiAoZmQgPCAwIHx8ICEoZmlsZSA9IGZnZXRfcmF3KGZkKSkpCiAJCQlyZXR1cm4gLUVCQURG
OwogCQkvKiBkb24ndCBhbGxvdyBpb191cmluZyBmaWxlcyAqLwotCQlpZiAoaW9fdXJpbmdf
Z2V0X3NvY2tldChmaWxlKSkgeworCQlpZiAoaW9faXNfdXJpbmdfZm9wcyhmaWxlKSkgewog
CQkJZnB1dChmaWxlKTsKIAkJCXJldHVybiAtRUlOVkFMOwogCQl9CmRpZmYgLS1naXQgYS9u
ZXQvdW5peC9zY20uYyBiL25ldC91bml4L3NjbS5jCmluZGV4IDZmZjYyOGYyMzQ5Zi4uODIy
Y2UwZDBkNzkxIDEwMDY0NAotLS0gYS9uZXQvdW5peC9zY20uYworKysgYi9uZXQvdW5peC9z
Y20uYwpAQCAtMzUsMTAgKzM1LDggQEAgc3RydWN0IHNvY2sgKnVuaXhfZ2V0X3NvY2tldChz
dHJ1Y3QgZmlsZSAqZmlscCkKIAkJLyogUEZfVU5JWCA/ICovCiAJCWlmIChzICYmIG9wcyAm
JiBvcHMtPmZhbWlseSA9PSBQRl9VTklYKQogCQkJdV9zb2NrID0gczsKLQl9IGVsc2Ugewot
CQkvKiBDb3VsZCBiZSBhbiBpb191cmluZyBpbnN0YW5jZSAqLwotCQl1X3NvY2sgPSBpb191
cmluZ19nZXRfc29ja2V0KGZpbHApOwogCX0KKwogCXJldHVybiB1X3NvY2s7CiB9CiBFWFBP
UlRfU1lNQk9MKHVuaXhfZ2V0X3NvY2tldCk7Ci0tIAoyLjQzLjAKCg==
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="6.7-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Disposition: attachment;
 filename*0="6.7-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Transfer-Encoding: base64

RnJvbSBlNzQyNDczY2E3MGExZmIyNDkyNDUxYmY0OTU5ZDBlOTRhMGMxYzdjIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFR1ZSwgMTkgRGVjIDIwMjMgMTI6MzY6MzQgLTA3MDAKU3ViamVjdDogW1BBVENIIDIv
Ml0gaW9fdXJpbmc6IGRyb3AgYW55IGNvZGUgcmVsYXRlZCB0byBTQ01fUklHSFRTCgpDb21t
aXQgNmU1ZTZkMjc0OTU2MzA1ZjFmYzAzNDA1MjJiMzhmNWY1YmU3NGJkYiB1cHN0cmVhbS4K
ClRoaXMgaXMgZGVhZCBjb2RlIGFmdGVyIHdlIGRyb3BwZWQgc3VwcG9ydCBmb3IgcGFzc2lu
ZyBpb191cmluZyBmZHMKb3ZlciBTQ01fUklHSFRTLCBnZXQgcmlkIG9mIGl0LgoKU2lnbmVk
LW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGluY2x1ZGUvbGlu
dXgvaW9fdXJpbmdfdHlwZXMuaCB8ICAgMyAtCiBpb191cmluZy9maWxldGFibGUuYyAgICAg
ICAgICAgfCAgMTEgKy0tCiBpb191cmluZy9pb191cmluZy5jICAgICAgICAgICAgfCAgMzIg
Ky0tLS0tLQogaW9fdXJpbmcvcnNyYy5jICAgICAgICAgICAgICAgIHwgMTY5ICstLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogaW9fdXJpbmcvcnNyYy5oICAgICAgICAgICAg
ICAgIHwgIDE1IC0tLQogNSBmaWxlcyBjaGFuZ2VkLCAxMCBpbnNlcnRpb25zKCspLCAyMjAg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9pb191cmluZ190eXBl
cy5oIGIvaW5jbHVkZS9saW51eC9pb191cmluZ190eXBlcy5oCmluZGV4IDIzOWE0ZjY4ODAx
Yi4uMzM1ZWNhNDlkYzhiIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nX3R5
cGVzLmgKKysrIGIvaW5jbHVkZS9saW51eC9pb191cmluZ190eXBlcy5oCkBAIC0zNTgsOSAr
MzU4LDYgQEAgc3RydWN0IGlvX3JpbmdfY3R4IHsKIAlzdHJ1Y3Qgd2FpdF9xdWV1ZV9oZWFk
CQlyc3JjX3F1aWVzY2Vfd3E7CiAJdW5zaWduZWQJCQlyc3JjX3F1aWVzY2U7CiAKLQkjaWYg
ZGVmaW5lZChDT05GSUdfVU5JWCkKLQkJc3RydWN0IHNvY2tldAkJKnJpbmdfc29jazsKLQkj
ZW5kaWYKIAkvKiBoYXNoZWQgYnVmZmVyZWQgd3JpdGUgc2VyaWFsaXphdGlvbiAqLwogCXN0
cnVjdCBpb193cV9oYXNoCQkqaGFzaF9tYXA7CiAKZGlmZiAtLWdpdCBhL2lvX3VyaW5nL2Zp
bGV0YWJsZS5jIGIvaW9fdXJpbmcvZmlsZXRhYmxlLmMKaW5kZXggZTdkNzQ5OTkxZGU0Li42
ZTg2ZTYxODhkYmUgMTAwNjQ0Ci0tLSBhL2lvX3VyaW5nL2ZpbGV0YWJsZS5jCisrKyBiL2lv
X3VyaW5nL2ZpbGV0YWJsZS5jCkBAIC04NywxMyArODcsMTAgQEAgc3RhdGljIGludCBpb19p
bnN0YWxsX2ZpeGVkX2ZpbGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCBmaWxl
ICpmaWxlLAogCQlpb19maWxlX2JpdG1hcF9jbGVhcigmY3R4LT5maWxlX3RhYmxlLCBzbG90
X2luZGV4KTsKIAl9CiAKLQlyZXQgPSBpb19zY21fZmlsZV9hY2NvdW50KGN0eCwgZmlsZSk7
Ci0JaWYgKCFyZXQpIHsKLQkJKmlvX2dldF90YWdfc2xvdChjdHgtPmZpbGVfZGF0YSwgc2xv
dF9pbmRleCkgPSAwOwotCQlpb19maXhlZF9maWxlX3NldChmaWxlX3Nsb3QsIGZpbGUpOwot
CQlpb19maWxlX2JpdG1hcF9zZXQoJmN0eC0+ZmlsZV90YWJsZSwgc2xvdF9pbmRleCk7Ci0J
fQotCXJldHVybiByZXQ7CisJKmlvX2dldF90YWdfc2xvdChjdHgtPmZpbGVfZGF0YSwgc2xv
dF9pbmRleCkgPSAwOworCWlvX2ZpeGVkX2ZpbGVfc2V0KGZpbGVfc2xvdCwgZmlsZSk7CisJ
aW9fZmlsZV9iaXRtYXBfc2V0KCZjdHgtPmZpbGVfdGFibGUsIHNsb3RfaW5kZXgpOworCXJl
dHVybiAwOwogfQogCiBpbnQgX19pb19maXhlZF9mZF9pbnN0YWxsKHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4LCBzdHJ1Y3QgZmlsZSAqZmlsZSwKZGlmZiAtLWdpdCBhL2lvX3VyaW5nL2lv
X3VyaW5nLmMgYi9pb191cmluZy9pb191cmluZy5jCmluZGV4IDA2YmQ4Nzk1YTg3ZC4uZjhk
MTQ1ZmI0MGJiIDEwMDY0NAotLS0gYS9pb191cmluZy9pb191cmluZy5jCisrKyBiL2lvX3Vy
aW5nL2lvX3VyaW5nLmMKQEAgLTYwLDcgKzYwLDYgQEAKICNpbmNsdWRlIDxsaW51eC9uZXQu
aD4KICNpbmNsdWRlIDxuZXQvc29jay5oPgogI2luY2x1ZGUgPG5ldC9hZl91bml4Lmg+Ci0j
aW5jbHVkZSA8bmV0L3NjbS5oPgogI2luY2x1ZGUgPGxpbnV4L2Fub25faW5vZGVzLmg+CiAj
aW5jbHVkZSA8bGludXgvc2NoZWQvbW0uaD4KICNpbmNsdWRlIDxsaW51eC91YWNjZXNzLmg+
CkBAIC0yOTM5LDEzICsyOTM4LDYgQEAgc3RhdGljIF9fY29sZCB2b2lkIGlvX3JpbmdfY3R4
X2ZyZWUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCiAJCWlvX3JzcmNfbm9kZV9kZXN0cm95
KGN0eCwgY3R4LT5yc3JjX25vZGUpOwogCiAJV0FSTl9PTl9PTkNFKCFsaXN0X2VtcHR5KCZj
dHgtPnJzcmNfcmVmX2xpc3QpKTsKLQotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0JaWYg
KGN0eC0+cmluZ19zb2NrKSB7Ci0JCWN0eC0+cmluZ19zb2NrLT5maWxlID0gTlVMTDsgLyog
c28gdGhhdCBpcHV0KCkgaXMgY2FsbGVkICovCi0JCXNvY2tfcmVsZWFzZShjdHgtPnJpbmdf
c29jayk7Ci0JfQotI2VuZGlmCiAJV0FSTl9PTl9PTkNFKCFsaXN0X2VtcHR5KCZjdHgtPmx0
aW1lb3V0X2xpc3QpKTsKIAogCWlvX2FsbG9jX2NhY2hlX2ZyZWUoJmN0eC0+cnNyY19ub2Rl
X2NhY2hlLCBpb19yc3JjX25vZGVfY2FjaGVfZnJlZSk7CkBAIC0zODY3LDMyICszODU5LDEy
IEBAIHN0YXRpYyBpbnQgaW9fdXJpbmdfaW5zdGFsbF9mZChzdHJ1Y3QgZmlsZSAqZmlsZSkK
IC8qCiAgKiBBbGxvY2F0ZSBhbiBhbm9ueW1vdXMgZmQsIHRoaXMgaXMgd2hhdCBjb25zdGl0
dXRlcyB0aGUgYXBwbGljYXRpb24KICAqIHZpc2libGUgYmFja2luZyBvZiBhbiBpb191cmlu
ZyBpbnN0YW5jZS4gVGhlIGFwcGxpY2F0aW9uIG1tYXBzIHRoaXMKLSAqIGZkIHRvIGdhaW4g
YWNjZXNzIHRvIHRoZSBTUS9DUSByaW5nIGRldGFpbHMuIElmIFVOSVggc29ja2V0cyBhcmUg
ZW5hYmxlZCwKLSAqIHdlIGhhdmUgdG8gdGllIHRoaXMgZmQgdG8gYSBzb2NrZXQgZm9yIGZp
bGUgZ2FyYmFnZSBjb2xsZWN0aW9uIHB1cnBvc2VzLgorICogZmQgdG8gZ2FpbiBhY2Nlc3Mg
dG8gdGhlIFNRL0NRIHJpbmcgZGV0YWlscy4KICAqLwogc3RhdGljIHN0cnVjdCBmaWxlICpp
b191cmluZ19nZXRfZmlsZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIHsKLQlzdHJ1Y3Qg
ZmlsZSAqZmlsZTsKLSNpZiBkZWZpbmVkKENPTkZJR19VTklYKQotCWludCByZXQ7Ci0KLQly
ZXQgPSBzb2NrX2NyZWF0ZV9rZXJuKCZpbml0X25ldCwgUEZfVU5JWCwgU09DS19SQVcsIElQ
UFJPVE9fSVAsCi0JCQkJJmN0eC0+cmluZ19zb2NrKTsKLQlpZiAocmV0KQotCQlyZXR1cm4g
RVJSX1BUUihyZXQpOwotI2VuZGlmCi0KLQlmaWxlID0gYW5vbl9pbm9kZV9nZXRmaWxlX3Nl
Y3VyZSgiW2lvX3VyaW5nXSIsICZpb191cmluZ19mb3BzLCBjdHgsCisJcmV0dXJuIGFub25f
aW5vZGVfZ2V0ZmlsZV9zZWN1cmUoIltpb191cmluZ10iLCAmaW9fdXJpbmdfZm9wcywgY3R4
LAogCQkJCQkgT19SRFdSIHwgT19DTE9FWEVDLCBOVUxMKTsKLSNpZiBkZWZpbmVkKENPTkZJ
R19VTklYKQotCWlmIChJU19FUlIoZmlsZSkpIHsKLQkJc29ja19yZWxlYXNlKGN0eC0+cmlu
Z19zb2NrKTsKLQkJY3R4LT5yaW5nX3NvY2sgPSBOVUxMOwotCX0gZWxzZSB7Ci0JCWN0eC0+
cmluZ19zb2NrLT5maWxlID0gZmlsZTsKLQl9Ci0jZW5kaWYKLQlyZXR1cm4gZmlsZTsKIH0K
IAogc3RhdGljIF9fY29sZCBpbnQgaW9fdXJpbmdfY3JlYXRlKHVuc2lnbmVkIGVudHJpZXMs
IHN0cnVjdCBpb191cmluZ19wYXJhbXMgKnAsCmRpZmYgLS1naXQgYS9pb191cmluZy9yc3Jj
LmMgYi9pb191cmluZy9yc3JjLmMKaW5kZXggZjUyMWM1OTY1YTkzLi40ODE4Yjc5MjMxZGQg
MTAwNjQ0Ci0tLSBhL2lvX3VyaW5nL3JzcmMuYworKysgYi9pb191cmluZy9yc3JjLmMKQEAg
LTI0LDcgKzI0LDYgQEAgc3RydWN0IGlvX3JzcmNfdXBkYXRlIHsKIH07CiAKIHN0YXRpYyB2
b2lkIGlvX3JzcmNfYnVmX3B1dChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IGlv
X3JzcmNfcHV0ICpwcnNyYyk7Ci1zdGF0aWMgdm9pZCBpb19yc3JjX2ZpbGVfcHV0KHN0cnVj
dCBpb19yaW5nX2N0eCAqY3R4LCBzdHJ1Y3QgaW9fcnNyY19wdXQgKnByc3JjKTsKIHN0YXRp
YyBpbnQgaW9fc3FlX2J1ZmZlcl9yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwg
c3RydWN0IGlvdmVjICppb3YsCiAJCQkJICBzdHJ1Y3QgaW9fbWFwcGVkX3VidWYgKipwaW11
LAogCQkJCSAgc3RydWN0IHBhZ2UgKipsYXN0X2hwYWdlKTsKQEAgLTE1Nyw3ICsxNTYsNyBA
QCBzdGF0aWMgdm9pZCBpb19yc3JjX3B1dF93b3JrKHN0cnVjdCBpb19yc3JjX25vZGUgKm5v
ZGUpCiAKIAlzd2l0Y2ggKG5vZGUtPnR5cGUpIHsKIAljYXNlIElPUklOR19SU1JDX0ZJTEU6
Ci0JCWlvX3JzcmNfZmlsZV9wdXQobm9kZS0+Y3R4LCBwcnNyYyk7CisJCWZwdXQocHJzcmMt
PmZpbGUpOwogCQlicmVhazsKIAljYXNlIElPUklOR19SU1JDX0JVRkZFUjoKIAkJaW9fcnNy
Y19idWZfcHV0KG5vZGUtPmN0eCwgcHJzcmMpOwpAQCAtNDAyLDIzICs0MDEsMTMgQEAgc3Rh
dGljIGludCBfX2lvX3NxZV9maWxlc191cGRhdGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgs
CiAJCQkJYnJlYWs7CiAJCQl9CiAJCQkvKgotCQkJICogRG9uJ3QgYWxsb3cgaW9fdXJpbmcg
aW5zdGFuY2VzIHRvIGJlIHJlZ2lzdGVyZWQuIElmCi0JCQkgKiBVTklYIGlzbid0IGVuYWJs
ZWQsIHRoZW4gdGhpcyBjYXVzZXMgYSByZWZlcmVuY2UKLQkJCSAqIGN5Y2xlIGFuZCB0aGlz
IGluc3RhbmNlIGNhbiBuZXZlciBnZXQgZnJlZWQuIElmIFVOSVgKLQkJCSAqIGlzIGVuYWJs
ZWQgd2UnbGwgaGFuZGxlIGl0IGp1c3QgZmluZSwgYnV0IHRoZXJlJ3MKLQkJCSAqIHN0aWxs
IG5vIHBvaW50IGluIGFsbG93aW5nIGEgcmluZyBmZCBhcyBpdCBkb2Vzbid0Ci0JCQkgKiBz
dXBwb3J0IHJlZ3VsYXIgcmVhZC93cml0ZSBhbnl3YXkuCisJCQkgKiBEb24ndCBhbGxvdyBp
b191cmluZyBpbnN0YW5jZXMgdG8gYmUgcmVnaXN0ZXJlZC4KIAkJCSAqLwogCQkJaWYgKGlv
X2lzX3VyaW5nX2ZvcHMoZmlsZSkpIHsKIAkJCQlmcHV0KGZpbGUpOwogCQkJCWVyciA9IC1F
QkFERjsKIAkJCQlicmVhazsKIAkJCX0KLQkJCWVyciA9IGlvX3NjbV9maWxlX2FjY291bnQo
Y3R4LCBmaWxlKTsKLQkJCWlmIChlcnIpIHsKLQkJCQlmcHV0KGZpbGUpOwotCQkJCWJyZWFr
OwotCQkJfQogCQkJKmlvX2dldF90YWdfc2xvdChkYXRhLCBpKSA9IHRhZzsKIAkJCWlvX2Zp
eGVkX2ZpbGVfc2V0KGZpbGVfc2xvdCwgZmlsZSk7CiAJCQlpb19maWxlX2JpdG1hcF9zZXQo
JmN0eC0+ZmlsZV90YWJsZSwgaSk7CkBAIC02NzUsMjIgKzY2NCwxMiBAQCB2b2lkIF9faW9f
c3FlX2ZpbGVzX3VucmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCiAJZm9yIChp
ID0gMDsgaSA8IGN0eC0+bnJfdXNlcl9maWxlczsgaSsrKSB7CiAJCXN0cnVjdCBmaWxlICpm
aWxlID0gaW9fZmlsZV9mcm9tX2luZGV4KCZjdHgtPmZpbGVfdGFibGUsIGkpOwogCi0JCS8q
IHNraXAgc2NtIGFjY291bnRlZCBmaWxlcywgdGhleSdsbCBiZSBmcmVlZCBieSAtPnJpbmdf
c29jayAqLwotCQlpZiAoIWZpbGUgfHwgaW9fZmlsZV9uZWVkX3NjbShmaWxlKSkKKwkJaWYg
KCFmaWxlKQogCQkJY29udGludWU7CiAJCWlvX2ZpbGVfYml0bWFwX2NsZWFyKCZjdHgtPmZp
bGVfdGFibGUsIGkpOwogCQlmcHV0KGZpbGUpOwogCX0KIAotI2lmIGRlZmluZWQoQ09ORklH
X1VOSVgpCi0JaWYgKGN0eC0+cmluZ19zb2NrKSB7Ci0JCXN0cnVjdCBzb2NrICpzb2NrID0g
Y3R4LT5yaW5nX3NvY2stPnNrOwotCQlzdHJ1Y3Qgc2tfYnVmZiAqc2tiOwotCi0JCXdoaWxl
ICgoc2tiID0gc2tiX2RlcXVldWUoJnNvY2stPnNrX3JlY2VpdmVfcXVldWUpKSAhPSBOVUxM
KQotCQkJa2ZyZWVfc2tiKHNrYik7Ci0JfQotI2VuZGlmCiAJaW9fZnJlZV9maWxlX3RhYmxl
cygmY3R4LT5maWxlX3RhYmxlKTsKIAlpb19maWxlX3RhYmxlX3NldF9hbGxvY19yYW5nZShj
dHgsIDAsIDApOwogCWlvX3JzcmNfZGF0YV9mcmVlKGN0eC0+ZmlsZV9kYXRhKTsKQEAgLTcx
OCwxMzcgKzY5Nyw2IEBAIGludCBpb19zcWVfZmlsZXNfdW5yZWdpc3RlcihzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCkKIAlyZXR1cm4gcmV0OwogfQogCi0vKgotICogRW5zdXJlIHRoZSBV
TklYIGdjIGlzIGF3YXJlIG9mIG91ciBmaWxlIHNldCwgc28gd2UgYXJlIGNlcnRhaW4gdGhh
dAotICogdGhlIGlvX3VyaW5nIGNhbiBiZSBzYWZlbHkgdW5yZWdpc3RlcmVkIG9uIHByb2Nl
c3MgZXhpdCwgZXZlbiBpZiB3ZSBoYXZlCi0gKiBsb29wcyBpbiB0aGUgZmlsZSByZWZlcmVu
Y2luZy4gV2UgYWNjb3VudCBvbmx5IGZpbGVzIHRoYXQgY2FuIGhvbGQgb3RoZXIKLSAqIGZp
bGVzIGJlY2F1c2Ugb3RoZXJ3aXNlIHRoZXkgY2FuJ3QgZm9ybSBhIGxvb3AgYW5kIHNvIGFy
ZSBub3QgaW50ZXJlc3RpbmcKLSAqIGZvciBHQy4KLSAqLwotaW50IF9faW9fc2NtX2ZpbGVf
YWNjb3VudChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IGZpbGUgKmZpbGUpCi17
Ci0jaWYgZGVmaW5lZChDT05GSUdfVU5JWCkKLQlzdHJ1Y3Qgc29jayAqc2sgPSBjdHgtPnJp
bmdfc29jay0+c2s7Ci0Jc3RydWN0IHNrX2J1ZmZfaGVhZCAqaGVhZCA9ICZzay0+c2tfcmVj
ZWl2ZV9xdWV1ZTsKLQlzdHJ1Y3Qgc2NtX2ZwX2xpc3QgKmZwbDsKLQlzdHJ1Y3Qgc2tfYnVm
ZiAqc2tiOwotCi0JaWYgKGxpa2VseSghaW9fZmlsZV9uZWVkX3NjbShmaWxlKSkpCi0JCXJl
dHVybiAwOwotCi0JLyoKLQkgKiBTZWUgaWYgd2UgY2FuIG1lcmdlIHRoaXMgZmlsZSBpbnRv
IGFuIGV4aXN0aW5nIHNrYiBTQ01fUklHSFRTCi0JICogZmlsZSBzZXQuIElmIHRoZXJlJ3Mg
bm8gcm9vbSwgZmFsbCBiYWNrIHRvIGFsbG9jYXRpbmcgYSBuZXcgc2tiCi0JICogYW5kIGZp
bGxpbmcgaXQgaW4uCi0JICovCi0Jc3Bpbl9sb2NrX2lycSgmaGVhZC0+bG9jayk7Ci0Jc2ti
ID0gc2tiX3BlZWsoaGVhZCk7Ci0JaWYgKHNrYiAmJiBVTklYQ0Ioc2tiKS5mcC0+Y291bnQg
PCBTQ01fTUFYX0ZEKQotCQlfX3NrYl91bmxpbmsoc2tiLCBoZWFkKTsKLQllbHNlCi0JCXNr
YiA9IE5VTEw7Ci0Jc3Bpbl91bmxvY2tfaXJxKCZoZWFkLT5sb2NrKTsKLQotCWlmICghc2ti
KSB7Ci0JCWZwbCA9IGt6YWxsb2Moc2l6ZW9mKCpmcGwpLCBHRlBfS0VSTkVMKTsKLQkJaWYg
KCFmcGwpCi0JCQlyZXR1cm4gLUVOT01FTTsKLQotCQlza2IgPSBhbGxvY19za2IoMCwgR0ZQ
X0tFUk5FTCk7Ci0JCWlmICghc2tiKSB7Ci0JCQlrZnJlZShmcGwpOwotCQkJcmV0dXJuIC1F
Tk9NRU07Ci0JCX0KLQotCQlmcGwtPnVzZXIgPSBnZXRfdWlkKGN1cnJlbnRfdXNlcigpKTsK
LQkJZnBsLT5tYXggPSBTQ01fTUFYX0ZEOwotCQlmcGwtPmNvdW50ID0gMDsKLQotCQlVTklY
Q0Ioc2tiKS5mcCA9IGZwbDsKLQkJc2tiLT5zayA9IHNrOwotCQlza2ItPmRlc3RydWN0b3Ig
PSBpb191cmluZ19kZXN0cnVjdF9zY207Ci0JCXJlZmNvdW50X2FkZChza2ItPnRydWVzaXpl
LCAmc2stPnNrX3dtZW1fYWxsb2MpOwotCX0KLQotCWZwbCA9IFVOSVhDQihza2IpLmZwOwot
CWZwbC0+ZnBbZnBsLT5jb3VudCsrXSA9IGdldF9maWxlKGZpbGUpOwotCXVuaXhfaW5mbGln
aHQoZnBsLT51c2VyLCBmaWxlKTsKLQlza2JfcXVldWVfaGVhZChoZWFkLCBza2IpOwotCWZw
dXQoZmlsZSk7Ci0jZW5kaWYKLQlyZXR1cm4gMDsKLX0KLQotc3RhdGljIF9fY29sZCB2b2lk
IGlvX3JzcmNfZmlsZV9zY21fcHV0KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBzdHJ1Y3Qg
ZmlsZSAqZmlsZSkKLXsKLSNpZiBkZWZpbmVkKENPTkZJR19VTklYKQotCXN0cnVjdCBzb2Nr
ICpzb2NrID0gY3R4LT5yaW5nX3NvY2stPnNrOwotCXN0cnVjdCBza19idWZmX2hlYWQgbGlz
dCwgKmhlYWQgPSAmc29jay0+c2tfcmVjZWl2ZV9xdWV1ZTsKLQlzdHJ1Y3Qgc2tfYnVmZiAq
c2tiOwotCWludCBpOwotCi0JX19za2JfcXVldWVfaGVhZF9pbml0KCZsaXN0KTsKLQotCS8q
Ci0JICogRmluZCB0aGUgc2tiIHRoYXQgaG9sZHMgdGhpcyBmaWxlIGluIGl0cyBTQ01fUklH
SFRTLiBXaGVuIGZvdW5kLAotCSAqIHJlbW92ZSB0aGlzIGVudHJ5IGFuZCByZWFycmFuZ2Ug
dGhlIGZpbGUgYXJyYXkuCi0JICovCi0Jc2tiID0gc2tiX2RlcXVldWUoaGVhZCk7Ci0Jd2hp
bGUgKHNrYikgewotCQlzdHJ1Y3Qgc2NtX2ZwX2xpc3QgKmZwOwotCi0JCWZwID0gVU5JWENC
KHNrYikuZnA7Ci0JCWZvciAoaSA9IDA7IGkgPCBmcC0+Y291bnQ7IGkrKykgewotCQkJaW50
IGxlZnQ7Ci0KLQkJCWlmIChmcC0+ZnBbaV0gIT0gZmlsZSkKLQkJCQljb250aW51ZTsKLQot
CQkJdW5peF9ub3RpbmZsaWdodChmcC0+dXNlciwgZnAtPmZwW2ldKTsKLQkJCWxlZnQgPSBm
cC0+Y291bnQgLSAxIC0gaTsKLQkJCWlmIChsZWZ0KSB7Ci0JCQkJbWVtbW92ZSgmZnAtPmZw
W2ldLCAmZnAtPmZwW2kgKyAxXSwKLQkJCQkJCWxlZnQgKiBzaXplb2Yoc3RydWN0IGZpbGUg
KikpOwotCQkJfQotCQkJZnAtPmNvdW50LS07Ci0JCQlpZiAoIWZwLT5jb3VudCkgewotCQkJ
CWtmcmVlX3NrYihza2IpOwotCQkJCXNrYiA9IE5VTEw7Ci0JCQl9IGVsc2UgewotCQkJCV9f
c2tiX3F1ZXVlX3RhaWwoJmxpc3QsIHNrYik7Ci0JCQl9Ci0JCQlmcHV0KGZpbGUpOwotCQkJ
ZmlsZSA9IE5VTEw7Ci0JCQlicmVhazsKLQkJfQotCi0JCWlmICghZmlsZSkKLQkJCWJyZWFr
OwotCi0JCV9fc2tiX3F1ZXVlX3RhaWwoJmxpc3QsIHNrYik7Ci0KLQkJc2tiID0gc2tiX2Rl
cXVldWUoaGVhZCk7Ci0JfQotCi0JaWYgKHNrYl9wZWVrKCZsaXN0KSkgewotCQlzcGluX2xv
Y2tfaXJxKCZoZWFkLT5sb2NrKTsKLQkJd2hpbGUgKChza2IgPSBfX3NrYl9kZXF1ZXVlKCZs
aXN0KSkgIT0gTlVMTCkKLQkJCV9fc2tiX3F1ZXVlX3RhaWwoaGVhZCwgc2tiKTsKLQkJc3Bp
bl91bmxvY2tfaXJxKCZoZWFkLT5sb2NrKTsKLQl9Ci0jZW5kaWYKLX0KLQotc3RhdGljIHZv
aWQgaW9fcnNyY19maWxlX3B1dChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IGlv
X3JzcmNfcHV0ICpwcnNyYykKLXsKLQlzdHJ1Y3QgZmlsZSAqZmlsZSA9IHByc3JjLT5maWxl
OwotCi0JaWYgKGxpa2VseSghaW9fZmlsZV9uZWVkX3NjbShmaWxlKSkpCi0JCWZwdXQoZmls
ZSk7Ci0JZWxzZQotCQlpb19yc3JjX2ZpbGVfc2NtX3B1dChjdHgsIGZpbGUpOwotfQotCiBp
bnQgaW9fc3FlX2ZpbGVzX3JlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB2b2lk
IF9fdXNlciAqYXJnLAogCQkJICB1bnNpZ25lZCBucl9hcmdzLCB1NjQgX191c2VyICp0YWdz
KQogewpAQCAtODk3LDIxICs3NDUsMTIgQEAgaW50IGlvX3NxZV9maWxlc19yZWdpc3Rlcihz
dHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBfX3VzZXIgKmFyZywKIAkJCWdvdG8gZmFp
bDsKIAogCQkvKgotCQkgKiBEb24ndCBhbGxvdyBpb191cmluZyBpbnN0YW5jZXMgdG8gYmUg
cmVnaXN0ZXJlZC4gSWYgVU5JWAotCQkgKiBpc24ndCBlbmFibGVkLCB0aGVuIHRoaXMgY2F1
c2VzIGEgcmVmZXJlbmNlIGN5Y2xlIGFuZCB0aGlzCi0JCSAqIGluc3RhbmNlIGNhbiBuZXZl
ciBnZXQgZnJlZWQuIElmIFVOSVggaXMgZW5hYmxlZCB3ZSdsbAotCQkgKiBoYW5kbGUgaXQg
anVzdCBmaW5lLCBidXQgdGhlcmUncyBzdGlsbCBubyBwb2ludCBpbiBhbGxvd2luZwotCQkg
KiBhIHJpbmcgZmQgYXMgaXQgZG9lc24ndCBzdXBwb3J0IHJlZ3VsYXIgcmVhZC93cml0ZSBh
bnl3YXkuCisJCSAqIERvbid0IGFsbG93IGlvX3VyaW5nIGluc3RhbmNlcyB0byBiZSByZWdp
c3RlcmVkLgogCQkgKi8KIAkJaWYgKGlvX2lzX3VyaW5nX2ZvcHMoZmlsZSkpIHsKIAkJCWZw
dXQoZmlsZSk7CiAJCQlnb3RvIGZhaWw7CiAJCX0KLQkJcmV0ID0gaW9fc2NtX2ZpbGVfYWNj
b3VudChjdHgsIGZpbGUpOwotCQlpZiAocmV0KSB7Ci0JCQlmcHV0KGZpbGUpOwotCQkJZ290
byBmYWlsOwotCQl9CiAJCWZpbGVfc2xvdCA9IGlvX2ZpeGVkX2ZpbGVfc2xvdCgmY3R4LT5m
aWxlX3RhYmxlLCBpKTsKIAkJaW9fZml4ZWRfZmlsZV9zZXQoZmlsZV9zbG90LCBmaWxlKTsK
IAkJaW9fZmlsZV9iaXRtYXBfc2V0KCZjdHgtPmZpbGVfdGFibGUsIGkpOwpkaWZmIC0tZ2l0
IGEvaW9fdXJpbmcvcnNyYy5oIGIvaW9fdXJpbmcvcnNyYy5oCmluZGV4IDA4YWMwZDhlMDdl
Zi4uNzIzOGI5Y2ZlMzNiIDEwMDY0NAotLS0gYS9pb191cmluZy9yc3JjLmgKKysrIGIvaW9f
dXJpbmcvcnNyYy5oCkBAIC03NSwyMSArNzUsNiBAQCBpbnQgaW9fc3FlX2ZpbGVzX3VucmVn
aXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpOwogaW50IGlvX3NxZV9maWxlc19yZWdp
c3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBfX3VzZXIgKmFyZywKIAkJCSAg
dW5zaWduZWQgbnJfYXJncywgdTY0IF9fdXNlciAqdGFncyk7CiAKLWludCBfX2lvX3NjbV9m
aWxlX2FjY291bnQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCBmaWxlICpmaWxl
KTsKLQotc3RhdGljIGlubGluZSBib29sIGlvX2ZpbGVfbmVlZF9zY20oc3RydWN0IGZpbGUg
KmZpbHApCi17Ci0JcmV0dXJuIGZhbHNlOwotfQotCi1zdGF0aWMgaW5saW5lIGludCBpb19z
Y21fZmlsZV9hY2NvdW50KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LAotCQkJCSAgICAgIHN0
cnVjdCBmaWxlICpmaWxlKQotewotCWlmIChsaWtlbHkoIWlvX2ZpbGVfbmVlZF9zY20oZmls
ZSkpKQotCQlyZXR1cm4gMDsKLQlyZXR1cm4gX19pb19zY21fZmlsZV9hY2NvdW50KGN0eCwg
ZmlsZSk7Ci19Ci0KIGludCBpb19yZWdpc3Rlcl9maWxlc191cGRhdGUoc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHgsIHZvaWQgX191c2VyICphcmcsCiAJCQkgICAgIHVuc2lnbmVkIG5yX2Fy
Z3MpOwogaW50IGlvX3JlZ2lzdGVyX3JzcmNfdXBkYXRlKHN0cnVjdCBpb19yaW5nX2N0eCAq
Y3R4LCB2b2lkIF9fdXNlciAqYXJnLAotLSAKMi40My4wCgo=
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="6.6-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Disposition: attachment;
 filename*0="6.6-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Transfer-Encoding: base64

RnJvbSBjYmU5NDhkNDJlMWZmNDNlNzdkNjBmMjE4MjNkM2Q3OThmOTI4MzVlIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFR1ZSwgMTkgRGVjIDIwMjMgMTI6MzY6MzQgLTA3MDAKU3ViamVjdDogW1BBVENIIDIv
Ml0gaW9fdXJpbmc6IGRyb3AgYW55IGNvZGUgcmVsYXRlZCB0byBTQ01fUklHSFRTCgpUaGlz
IGlzIGRlYWQgY29kZSBhZnRlciB3ZSBkcm9wcGVkIHN1cHBvcnQgZm9yIHBhc3NpbmcgaW9f
dXJpbmcgZmRzCm92ZXIgU0NNX1JJR0hUUywgZ2V0IHJpZCBvZiBpdC4KClNpZ25lZC1vZmYt
Ynk6IEplbnMgQXhib2UgPGF4Ym9lQGtlcm5lbC5kaz4KLS0tCiBpbmNsdWRlL2xpbnV4L2lv
X3VyaW5nX3R5cGVzLmggfCAgIDMgLQogaW9fdXJpbmcvZmlsZXRhYmxlLmMgICAgICAgICAg
IHwgIDExICstLQogaW9fdXJpbmcvaW9fdXJpbmcuYyAgICAgICAgICAgIHwgIDMyICstLS0t
LS0KIGlvX3VyaW5nL3JzcmMuYyAgICAgICAgICAgICAgICB8IDE2OSArLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0KIGlvX3VyaW5nL3JzcmMuaCAgICAgICAgICAgICAgICB8
ICAxNSAtLS0KIDUgZmlsZXMgY2hhbmdlZCwgMTAgaW5zZXJ0aW9ucygrKSwgMjIwIGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvaW9fdXJpbmdfdHlwZXMuaCBi
L2luY2x1ZGUvbGludXgvaW9fdXJpbmdfdHlwZXMuaAppbmRleCA1ZmQ2NjRmYjcxYzguLjcz
MWJlYjMxOThjNCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9pb191cmluZ190eXBlcy5o
CisrKyBiL2luY2x1ZGUvbGludXgvaW9fdXJpbmdfdHlwZXMuaApAQCAtMzQ3LDkgKzM0Nyw2
IEBAIHN0cnVjdCBpb19yaW5nX2N0eCB7CiAKIAlzdHJ1Y3QgbGlzdF9oZWFkCQlpb19idWZm
ZXJzX3BhZ2VzOwogCi0JI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0JCXN0cnVjdCBzb2Nr
ZXQJCSpyaW5nX3NvY2s7Ci0JI2VuZGlmCiAJLyogaGFzaGVkIGJ1ZmZlcmVkIHdyaXRlIHNl
cmlhbGl6YXRpb24gKi8KIAlzdHJ1Y3QgaW9fd3FfaGFzaAkJKmhhc2hfbWFwOwogCmRpZmYg
LS1naXQgYS9pb191cmluZy9maWxldGFibGUuYyBiL2lvX3VyaW5nL2ZpbGV0YWJsZS5jCmlu
ZGV4IGU3ZDc0OTk5MWRlNC4uNmU4NmU2MTg4ZGJlIDEwMDY0NAotLS0gYS9pb191cmluZy9m
aWxldGFibGUuYworKysgYi9pb191cmluZy9maWxldGFibGUuYwpAQCAtODcsMTMgKzg3LDEw
IEBAIHN0YXRpYyBpbnQgaW9faW5zdGFsbF9maXhlZF9maWxlKHN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4LCBzdHJ1Y3QgZmlsZSAqZmlsZSwKIAkJaW9fZmlsZV9iaXRtYXBfY2xlYXIoJmN0
eC0+ZmlsZV90YWJsZSwgc2xvdF9pbmRleCk7CiAJfQogCi0JcmV0ID0gaW9fc2NtX2ZpbGVf
YWNjb3VudChjdHgsIGZpbGUpOwotCWlmICghcmV0KSB7Ci0JCSppb19nZXRfdGFnX3Nsb3Qo
Y3R4LT5maWxlX2RhdGEsIHNsb3RfaW5kZXgpID0gMDsKLQkJaW9fZml4ZWRfZmlsZV9zZXQo
ZmlsZV9zbG90LCBmaWxlKTsKLQkJaW9fZmlsZV9iaXRtYXBfc2V0KCZjdHgtPmZpbGVfdGFi
bGUsIHNsb3RfaW5kZXgpOwotCX0KLQlyZXR1cm4gcmV0OworCSppb19nZXRfdGFnX3Nsb3Qo
Y3R4LT5maWxlX2RhdGEsIHNsb3RfaW5kZXgpID0gMDsKKwlpb19maXhlZF9maWxlX3NldChm
aWxlX3Nsb3QsIGZpbGUpOworCWlvX2ZpbGVfYml0bWFwX3NldCgmY3R4LT5maWxlX3RhYmxl
LCBzbG90X2luZGV4KTsKKwlyZXR1cm4gMDsKIH0KIAogaW50IF9faW9fZml4ZWRfZmRfaW5z
dGFsbChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IGZpbGUgKmZpbGUsCmRpZmYg
LS1naXQgYS9pb191cmluZy9pb191cmluZy5jIGIvaW9fdXJpbmcvaW9fdXJpbmcuYwppbmRl
eCA3NDdkMmE2ZWNhYjguLjI3NDRkNzJmMTA4NSAxMDA2NDQKLS0tIGEvaW9fdXJpbmcvaW9f
dXJpbmcuYworKysgYi9pb191cmluZy9pb191cmluZy5jCkBAIC02MCw3ICs2MCw2IEBACiAj
aW5jbHVkZSA8bGludXgvbmV0Lmg+CiAjaW5jbHVkZSA8bmV0L3NvY2suaD4KICNpbmNsdWRl
IDxuZXQvYWZfdW5peC5oPgotI2luY2x1ZGUgPG5ldC9zY20uaD4KICNpbmNsdWRlIDxsaW51
eC9hbm9uX2lub2Rlcy5oPgogI2luY2x1ZGUgPGxpbnV4L3NjaGVkL21tLmg+CiAjaW5jbHVk
ZSA8bGludXgvdWFjY2Vzcy5oPgpAQCAtMjkzMSwxMyArMjkzMCw2IEBAIHN0YXRpYyBfX2Nv
bGQgdm9pZCBpb19yaW5nX2N0eF9mcmVlKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogCQlp
b19yc3JjX25vZGVfZGVzdHJveShjdHgsIGN0eC0+cnNyY19ub2RlKTsKIAogCVdBUk5fT05f
T05DRSghbGlzdF9lbXB0eSgmY3R4LT5yc3JjX3JlZl9saXN0KSk7Ci0KLSNpZiBkZWZpbmVk
KENPTkZJR19VTklYKQotCWlmIChjdHgtPnJpbmdfc29jaykgewotCQljdHgtPnJpbmdfc29j
ay0+ZmlsZSA9IE5VTEw7IC8qIHNvIHRoYXQgaXB1dCgpIGlzIGNhbGxlZCAqLwotCQlzb2Nr
X3JlbGVhc2UoY3R4LT5yaW5nX3NvY2spOwotCX0KLSNlbmRpZgogCVdBUk5fT05fT05DRSgh
bGlzdF9lbXB0eSgmY3R4LT5sdGltZW91dF9saXN0KSk7CiAKIAlpb19hbGxvY19jYWNoZV9m
cmVlKCZjdHgtPnJzcmNfbm9kZV9jYWNoZSwgaW9fcnNyY19ub2RlX2NhY2hlX2ZyZWUpOwpA
QCAtMzgyNSwzMiArMzgxNywxMiBAQCBzdGF0aWMgaW50IGlvX3VyaW5nX2luc3RhbGxfZmQo
c3RydWN0IGZpbGUgKmZpbGUpCiAvKgogICogQWxsb2NhdGUgYW4gYW5vbnltb3VzIGZkLCB0
aGlzIGlzIHdoYXQgY29uc3RpdHV0ZXMgdGhlIGFwcGxpY2F0aW9uCiAgKiB2aXNpYmxlIGJh
Y2tpbmcgb2YgYW4gaW9fdXJpbmcgaW5zdGFuY2UuIFRoZSBhcHBsaWNhdGlvbiBtbWFwcyB0
aGlzCi0gKiBmZCB0byBnYWluIGFjY2VzcyB0byB0aGUgU1EvQ1EgcmluZyBkZXRhaWxzLiBJ
ZiBVTklYIHNvY2tldHMgYXJlIGVuYWJsZWQsCi0gKiB3ZSBoYXZlIHRvIHRpZSB0aGlzIGZk
IHRvIGEgc29ja2V0IGZvciBmaWxlIGdhcmJhZ2UgY29sbGVjdGlvbiBwdXJwb3Nlcy4KKyAq
IGZkIHRvIGdhaW4gYWNjZXNzIHRvIHRoZSBTUS9DUSByaW5nIGRldGFpbHMuCiAgKi8KIHN0
YXRpYyBzdHJ1Y3QgZmlsZSAqaW9fdXJpbmdfZ2V0X2ZpbGUoc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHgpCiB7Ci0Jc3RydWN0IGZpbGUgKmZpbGU7Ci0jaWYgZGVmaW5lZChDT05GSUdfVU5J
WCkKLQlpbnQgcmV0OwotCi0JcmV0ID0gc29ja19jcmVhdGVfa2VybigmaW5pdF9uZXQsIFBG
X1VOSVgsIFNPQ0tfUkFXLCBJUFBST1RPX0lQLAotCQkJCSZjdHgtPnJpbmdfc29jayk7Ci0J
aWYgKHJldCkKLQkJcmV0dXJuIEVSUl9QVFIocmV0KTsKLSNlbmRpZgotCi0JZmlsZSA9IGFu
b25faW5vZGVfZ2V0ZmlsZV9zZWN1cmUoIltpb191cmluZ10iLCAmaW9fdXJpbmdfZm9wcywg
Y3R4LAorCXJldHVybiBhbm9uX2lub2RlX2dldGZpbGVfc2VjdXJlKCJbaW9fdXJpbmddIiwg
JmlvX3VyaW5nX2ZvcHMsIGN0eCwKIAkJCQkJIE9fUkRXUiB8IE9fQ0xPRVhFQywgTlVMTCk7
Ci0jaWYgZGVmaW5lZChDT05GSUdfVU5JWCkKLQlpZiAoSVNfRVJSKGZpbGUpKSB7Ci0JCXNv
Y2tfcmVsZWFzZShjdHgtPnJpbmdfc29jayk7Ci0JCWN0eC0+cmluZ19zb2NrID0gTlVMTDsK
LQl9IGVsc2UgewotCQljdHgtPnJpbmdfc29jay0+ZmlsZSA9IGZpbGU7Ci0JfQotI2VuZGlm
Ci0JcmV0dXJuIGZpbGU7CiB9CiAKIHN0YXRpYyBfX2NvbGQgaW50IGlvX3VyaW5nX2NyZWF0
ZSh1bnNpZ25lZCBlbnRyaWVzLCBzdHJ1Y3QgaW9fdXJpbmdfcGFyYW1zICpwLApkaWZmIC0t
Z2l0IGEvaW9fdXJpbmcvcnNyYy5jIGIvaW9fdXJpbmcvcnNyYy5jCmluZGV4IGRkZTUwMWFi
ZDcxOS4uOTUyMzA5MjFiMTZkIDEwMDY0NAotLS0gYS9pb191cmluZy9yc3JjLmMKKysrIGIv
aW9fdXJpbmcvcnNyYy5jCkBAIC0yNCw3ICsyNCw2IEBAIHN0cnVjdCBpb19yc3JjX3VwZGF0
ZSB7CiB9OwogCiBzdGF0aWMgdm9pZCBpb19yc3JjX2J1Zl9wdXQoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsIHN0cnVjdCBpb19yc3JjX3B1dCAqcHJzcmMpOwotc3RhdGljIHZvaWQgaW9f
cnNyY19maWxlX3B1dChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3RydWN0IGlvX3JzcmNf
cHV0ICpwcnNyYyk7CiBzdGF0aWMgaW50IGlvX3NxZV9idWZmZXJfcmVnaXN0ZXIoc3RydWN0
IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCBpb3ZlYyAqaW92LAogCQkJCSAgc3RydWN0IGlv
X21hcHBlZF91YnVmICoqcGltdSwKIAkJCQkgIHN0cnVjdCBwYWdlICoqbGFzdF9ocGFnZSk7
CkBAIC0xNTcsNyArMTU2LDcgQEAgc3RhdGljIHZvaWQgaW9fcnNyY19wdXRfd29yayhzdHJ1
Y3QgaW9fcnNyY19ub2RlICpub2RlKQogCiAJc3dpdGNoIChub2RlLT50eXBlKSB7CiAJY2Fz
ZSBJT1JJTkdfUlNSQ19GSUxFOgotCQlpb19yc3JjX2ZpbGVfcHV0KG5vZGUtPmN0eCwgcHJz
cmMpOworCQlmcHV0KHByc3JjLT5maWxlKTsKIAkJYnJlYWs7CiAJY2FzZSBJT1JJTkdfUlNS
Q19CVUZGRVI6CiAJCWlvX3JzcmNfYnVmX3B1dChub2RlLT5jdHgsIHByc3JjKTsKQEAgLTQw
MiwyMyArNDAxLDEzIEBAIHN0YXRpYyBpbnQgX19pb19zcWVfZmlsZXNfdXBkYXRlKHN0cnVj
dCBpb19yaW5nX2N0eCAqY3R4LAogCQkJCWJyZWFrOwogCQkJfQogCQkJLyoKLQkJCSAqIERv
bid0IGFsbG93IGlvX3VyaW5nIGluc3RhbmNlcyB0byBiZSByZWdpc3RlcmVkLiBJZgotCQkJ
ICogVU5JWCBpc24ndCBlbmFibGVkLCB0aGVuIHRoaXMgY2F1c2VzIGEgcmVmZXJlbmNlCi0J
CQkgKiBjeWNsZSBhbmQgdGhpcyBpbnN0YW5jZSBjYW4gbmV2ZXIgZ2V0IGZyZWVkLiBJZiBV
TklYCi0JCQkgKiBpcyBlbmFibGVkIHdlJ2xsIGhhbmRsZSBpdCBqdXN0IGZpbmUsIGJ1dCB0
aGVyZSdzCi0JCQkgKiBzdGlsbCBubyBwb2ludCBpbiBhbGxvd2luZyBhIHJpbmcgZmQgYXMg
aXQgZG9lc24ndAotCQkJICogc3VwcG9ydCByZWd1bGFyIHJlYWQvd3JpdGUgYW55d2F5Lgor
CQkJICogRG9uJ3QgYWxsb3cgaW9fdXJpbmcgaW5zdGFuY2VzIHRvIGJlIHJlZ2lzdGVyZWQu
CiAJCQkgKi8KIAkJCWlmIChpb19pc191cmluZ19mb3BzKGZpbGUpKSB7CiAJCQkJZnB1dChm
aWxlKTsKIAkJCQllcnIgPSAtRUJBREY7CiAJCQkJYnJlYWs7CiAJCQl9Ci0JCQllcnIgPSBp
b19zY21fZmlsZV9hY2NvdW50KGN0eCwgZmlsZSk7Ci0JCQlpZiAoZXJyKSB7Ci0JCQkJZnB1
dChmaWxlKTsKLQkJCQlicmVhazsKLQkJCX0KIAkJCSppb19nZXRfdGFnX3Nsb3QoZGF0YSwg
aSkgPSB0YWc7CiAJCQlpb19maXhlZF9maWxlX3NldChmaWxlX3Nsb3QsIGZpbGUpOwogCQkJ
aW9fZmlsZV9iaXRtYXBfc2V0KCZjdHgtPmZpbGVfdGFibGUsIGkpOwpAQCAtNjc1LDIyICs2
NjQsMTIgQEAgdm9pZCBfX2lvX3NxZV9maWxlc191bnJlZ2lzdGVyKHN0cnVjdCBpb19yaW5n
X2N0eCAqY3R4KQogCWZvciAoaSA9IDA7IGkgPCBjdHgtPm5yX3VzZXJfZmlsZXM7IGkrKykg
ewogCQlzdHJ1Y3QgZmlsZSAqZmlsZSA9IGlvX2ZpbGVfZnJvbV9pbmRleCgmY3R4LT5maWxl
X3RhYmxlLCBpKTsKIAotCQkvKiBza2lwIHNjbSBhY2NvdW50ZWQgZmlsZXMsIHRoZXknbGwg
YmUgZnJlZWQgYnkgLT5yaW5nX3NvY2sgKi8KLQkJaWYgKCFmaWxlIHx8IGlvX2ZpbGVfbmVl
ZF9zY20oZmlsZSkpCisJCWlmICghZmlsZSkKIAkJCWNvbnRpbnVlOwogCQlpb19maWxlX2Jp
dG1hcF9jbGVhcigmY3R4LT5maWxlX3RhYmxlLCBpKTsKIAkJZnB1dChmaWxlKTsKIAl9CiAK
LSNpZiBkZWZpbmVkKENPTkZJR19VTklYKQotCWlmIChjdHgtPnJpbmdfc29jaykgewotCQlz
dHJ1Y3Qgc29jayAqc29jayA9IGN0eC0+cmluZ19zb2NrLT5zazsKLQkJc3RydWN0IHNrX2J1
ZmYgKnNrYjsKLQotCQl3aGlsZSAoKHNrYiA9IHNrYl9kZXF1ZXVlKCZzb2NrLT5za19yZWNl
aXZlX3F1ZXVlKSkgIT0gTlVMTCkKLQkJCWtmcmVlX3NrYihza2IpOwotCX0KLSNlbmRpZgog
CWlvX2ZyZWVfZmlsZV90YWJsZXMoJmN0eC0+ZmlsZV90YWJsZSk7CiAJaW9fZmlsZV90YWJs
ZV9zZXRfYWxsb2NfcmFuZ2UoY3R4LCAwLCAwKTsKIAlpb19yc3JjX2RhdGFfZnJlZShjdHgt
PmZpbGVfZGF0YSk7CkBAIC03MTgsMTM3ICs2OTcsNiBAQCBpbnQgaW9fc3FlX2ZpbGVzX3Vu
cmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCiAJcmV0dXJuIHJldDsKIH0KIAot
LyoKLSAqIEVuc3VyZSB0aGUgVU5JWCBnYyBpcyBhd2FyZSBvZiBvdXIgZmlsZSBzZXQsIHNv
IHdlIGFyZSBjZXJ0YWluIHRoYXQKLSAqIHRoZSBpb191cmluZyBjYW4gYmUgc2FmZWx5IHVu
cmVnaXN0ZXJlZCBvbiBwcm9jZXNzIGV4aXQsIGV2ZW4gaWYgd2UgaGF2ZQotICogbG9vcHMg
aW4gdGhlIGZpbGUgcmVmZXJlbmNpbmcuIFdlIGFjY291bnQgb25seSBmaWxlcyB0aGF0IGNh
biBob2xkIG90aGVyCi0gKiBmaWxlcyBiZWNhdXNlIG90aGVyd2lzZSB0aGV5IGNhbid0IGZv
cm0gYSBsb29wIGFuZCBzbyBhcmUgbm90IGludGVyZXN0aW5nCi0gKiBmb3IgR0MuCi0gKi8K
LWludCBfX2lvX3NjbV9maWxlX2FjY291bnQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0
cnVjdCBmaWxlICpmaWxlKQotewotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0Jc3RydWN0
IHNvY2sgKnNrID0gY3R4LT5yaW5nX3NvY2stPnNrOwotCXN0cnVjdCBza19idWZmX2hlYWQg
KmhlYWQgPSAmc2stPnNrX3JlY2VpdmVfcXVldWU7Ci0Jc3RydWN0IHNjbV9mcF9saXN0ICpm
cGw7Ci0Jc3RydWN0IHNrX2J1ZmYgKnNrYjsKLQotCWlmIChsaWtlbHkoIWlvX2ZpbGVfbmVl
ZF9zY20oZmlsZSkpKQotCQlyZXR1cm4gMDsKLQotCS8qCi0JICogU2VlIGlmIHdlIGNhbiBt
ZXJnZSB0aGlzIGZpbGUgaW50byBhbiBleGlzdGluZyBza2IgU0NNX1JJR0hUUwotCSAqIGZp
bGUgc2V0LiBJZiB0aGVyZSdzIG5vIHJvb20sIGZhbGwgYmFjayB0byBhbGxvY2F0aW5nIGEg
bmV3IHNrYgotCSAqIGFuZCBmaWxsaW5nIGl0IGluLgotCSAqLwotCXNwaW5fbG9ja19pcnEo
JmhlYWQtPmxvY2spOwotCXNrYiA9IHNrYl9wZWVrKGhlYWQpOwotCWlmIChza2IgJiYgVU5J
WENCKHNrYikuZnAtPmNvdW50IDwgU0NNX01BWF9GRCkKLQkJX19za2JfdW5saW5rKHNrYiwg
aGVhZCk7Ci0JZWxzZQotCQlza2IgPSBOVUxMOwotCXNwaW5fdW5sb2NrX2lycSgmaGVhZC0+
bG9jayk7Ci0KLQlpZiAoIXNrYikgewotCQlmcGwgPSBremFsbG9jKHNpemVvZigqZnBsKSwg
R0ZQX0tFUk5FTCk7Ci0JCWlmICghZnBsKQotCQkJcmV0dXJuIC1FTk9NRU07Ci0KLQkJc2ti
ID0gYWxsb2Nfc2tiKDAsIEdGUF9LRVJORUwpOwotCQlpZiAoIXNrYikgewotCQkJa2ZyZWUo
ZnBsKTsKLQkJCXJldHVybiAtRU5PTUVNOwotCQl9Ci0KLQkJZnBsLT51c2VyID0gZ2V0X3Vp
ZChjdXJyZW50X3VzZXIoKSk7Ci0JCWZwbC0+bWF4ID0gU0NNX01BWF9GRDsKLQkJZnBsLT5j
b3VudCA9IDA7Ci0KLQkJVU5JWENCKHNrYikuZnAgPSBmcGw7Ci0JCXNrYi0+c2sgPSBzazsK
LQkJc2tiLT5kZXN0cnVjdG9yID0gaW9fdXJpbmdfZGVzdHJ1Y3Rfc2NtOwotCQlyZWZjb3Vu
dF9hZGQoc2tiLT50cnVlc2l6ZSwgJnNrLT5za193bWVtX2FsbG9jKTsKLQl9Ci0KLQlmcGwg
PSBVTklYQ0Ioc2tiKS5mcDsKLQlmcGwtPmZwW2ZwbC0+Y291bnQrK10gPSBnZXRfZmlsZShm
aWxlKTsKLQl1bml4X2luZmxpZ2h0KGZwbC0+dXNlciwgZmlsZSk7Ci0Jc2tiX3F1ZXVlX2hl
YWQoaGVhZCwgc2tiKTsKLQlmcHV0KGZpbGUpOwotI2VuZGlmCi0JcmV0dXJuIDA7Ci19Ci0K
LXN0YXRpYyBfX2NvbGQgdm9pZCBpb19yc3JjX2ZpbGVfc2NtX3B1dChzdHJ1Y3QgaW9fcmlu
Z19jdHggKmN0eCwgc3RydWN0IGZpbGUgKmZpbGUpCi17Ci0jaWYgZGVmaW5lZChDT05GSUdf
VU5JWCkKLQlzdHJ1Y3Qgc29jayAqc29jayA9IGN0eC0+cmluZ19zb2NrLT5zazsKLQlzdHJ1
Y3Qgc2tfYnVmZl9oZWFkIGxpc3QsICpoZWFkID0gJnNvY2stPnNrX3JlY2VpdmVfcXVldWU7
Ci0Jc3RydWN0IHNrX2J1ZmYgKnNrYjsKLQlpbnQgaTsKLQotCV9fc2tiX3F1ZXVlX2hlYWRf
aW5pdCgmbGlzdCk7Ci0KLQkvKgotCSAqIEZpbmQgdGhlIHNrYiB0aGF0IGhvbGRzIHRoaXMg
ZmlsZSBpbiBpdHMgU0NNX1JJR0hUUy4gV2hlbiBmb3VuZCwKLQkgKiByZW1vdmUgdGhpcyBl
bnRyeSBhbmQgcmVhcnJhbmdlIHRoZSBmaWxlIGFycmF5LgotCSAqLwotCXNrYiA9IHNrYl9k
ZXF1ZXVlKGhlYWQpOwotCXdoaWxlIChza2IpIHsKLQkJc3RydWN0IHNjbV9mcF9saXN0ICpm
cDsKLQotCQlmcCA9IFVOSVhDQihza2IpLmZwOwotCQlmb3IgKGkgPSAwOyBpIDwgZnAtPmNv
dW50OyBpKyspIHsKLQkJCWludCBsZWZ0OwotCi0JCQlpZiAoZnAtPmZwW2ldICE9IGZpbGUp
Ci0JCQkJY29udGludWU7Ci0KLQkJCXVuaXhfbm90aW5mbGlnaHQoZnAtPnVzZXIsIGZwLT5m
cFtpXSk7Ci0JCQlsZWZ0ID0gZnAtPmNvdW50IC0gMSAtIGk7Ci0JCQlpZiAobGVmdCkgewot
CQkJCW1lbW1vdmUoJmZwLT5mcFtpXSwgJmZwLT5mcFtpICsgMV0sCi0JCQkJCQlsZWZ0ICog
c2l6ZW9mKHN0cnVjdCBmaWxlICopKTsKLQkJCX0KLQkJCWZwLT5jb3VudC0tOwotCQkJaWYg
KCFmcC0+Y291bnQpIHsKLQkJCQlrZnJlZV9za2Ioc2tiKTsKLQkJCQlza2IgPSBOVUxMOwot
CQkJfSBlbHNlIHsKLQkJCQlfX3NrYl9xdWV1ZV90YWlsKCZsaXN0LCBza2IpOwotCQkJfQot
CQkJZnB1dChmaWxlKTsKLQkJCWZpbGUgPSBOVUxMOwotCQkJYnJlYWs7Ci0JCX0KLQotCQlp
ZiAoIWZpbGUpCi0JCQlicmVhazsKLQotCQlfX3NrYl9xdWV1ZV90YWlsKCZsaXN0LCBza2Ip
OwotCi0JCXNrYiA9IHNrYl9kZXF1ZXVlKGhlYWQpOwotCX0KLQotCWlmIChza2JfcGVlaygm
bGlzdCkpIHsKLQkJc3Bpbl9sb2NrX2lycSgmaGVhZC0+bG9jayk7Ci0JCXdoaWxlICgoc2ti
ID0gX19za2JfZGVxdWV1ZSgmbGlzdCkpICE9IE5VTEwpCi0JCQlfX3NrYl9xdWV1ZV90YWls
KGhlYWQsIHNrYik7Ci0JCXNwaW5fdW5sb2NrX2lycSgmaGVhZC0+bG9jayk7Ci0JfQotI2Vu
ZGlmCi19Ci0KLXN0YXRpYyB2b2lkIGlvX3JzcmNfZmlsZV9wdXQoc3RydWN0IGlvX3Jpbmdf
Y3R4ICpjdHgsIHN0cnVjdCBpb19yc3JjX3B1dCAqcHJzcmMpCi17Ci0Jc3RydWN0IGZpbGUg
KmZpbGUgPSBwcnNyYy0+ZmlsZTsKLQotCWlmIChsaWtlbHkoIWlvX2ZpbGVfbmVlZF9zY20o
ZmlsZSkpKQotCQlmcHV0KGZpbGUpOwotCWVsc2UKLQkJaW9fcnNyY19maWxlX3NjbV9wdXQo
Y3R4LCBmaWxlKTsKLX0KLQogaW50IGlvX3NxZV9maWxlc19yZWdpc3RlcihzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCwgdm9pZCBfX3VzZXIgKmFyZywKIAkJCSAgdW5zaWduZWQgbnJfYXJn
cywgdTY0IF9fdXNlciAqdGFncykKIHsKQEAgLTg5NywyMSArNzQ1LDEyIEBAIGludCBpb19z
cWVfZmlsZXNfcmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHZvaWQgX191c2Vy
ICphcmcsCiAJCQlnb3RvIGZhaWw7CiAKIAkJLyoKLQkJICogRG9uJ3QgYWxsb3cgaW9fdXJp
bmcgaW5zdGFuY2VzIHRvIGJlIHJlZ2lzdGVyZWQuIElmIFVOSVgKLQkJICogaXNuJ3QgZW5h
YmxlZCwgdGhlbiB0aGlzIGNhdXNlcyBhIHJlZmVyZW5jZSBjeWNsZSBhbmQgdGhpcwotCQkg
KiBpbnN0YW5jZSBjYW4gbmV2ZXIgZ2V0IGZyZWVkLiBJZiBVTklYIGlzIGVuYWJsZWQgd2Un
bGwKLQkJICogaGFuZGxlIGl0IGp1c3QgZmluZSwgYnV0IHRoZXJlJ3Mgc3RpbGwgbm8gcG9p
bnQgaW4gYWxsb3dpbmcKLQkJICogYSByaW5nIGZkIGFzIGl0IGRvZXNuJ3Qgc3VwcG9ydCBy
ZWd1bGFyIHJlYWQvd3JpdGUgYW55d2F5LgorCQkgKiBEb24ndCBhbGxvdyBpb191cmluZyBp
bnN0YW5jZXMgdG8gYmUgcmVnaXN0ZXJlZC4KIAkJICovCiAJCWlmIChpb19pc191cmluZ19m
b3BzKGZpbGUpKSB7CiAJCQlmcHV0KGZpbGUpOwogCQkJZ290byBmYWlsOwogCQl9Ci0JCXJl
dCA9IGlvX3NjbV9maWxlX2FjY291bnQoY3R4LCBmaWxlKTsKLQkJaWYgKHJldCkgewotCQkJ
ZnB1dChmaWxlKTsKLQkJCWdvdG8gZmFpbDsKLQkJfQogCQlmaWxlX3Nsb3QgPSBpb19maXhl
ZF9maWxlX3Nsb3QoJmN0eC0+ZmlsZV90YWJsZSwgaSk7CiAJCWlvX2ZpeGVkX2ZpbGVfc2V0
KGZpbGVfc2xvdCwgZmlsZSk7CiAJCWlvX2ZpbGVfYml0bWFwX3NldCgmY3R4LT5maWxlX3Rh
YmxlLCBpKTsKZGlmZiAtLWdpdCBhL2lvX3VyaW5nL3JzcmMuaCBiL2lvX3VyaW5nL3JzcmMu
aAppbmRleCAwOGFjMGQ4ZTA3ZWYuLjcyMzhiOWNmZTMzYiAxMDA2NDQKLS0tIGEvaW9fdXJp
bmcvcnNyYy5oCisrKyBiL2lvX3VyaW5nL3JzcmMuaApAQCAtNzUsMjEgKzc1LDYgQEAgaW50
IGlvX3NxZV9maWxlc191bnJlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KTsKIGlu
dCBpb19zcWVfZmlsZXNfcmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHZvaWQg
X191c2VyICphcmcsCiAJCQkgIHVuc2lnbmVkIG5yX2FyZ3MsIHU2NCBfX3VzZXIgKnRhZ3Mp
OwogCi1pbnQgX19pb19zY21fZmlsZV9hY2NvdW50KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4
LCBzdHJ1Y3QgZmlsZSAqZmlsZSk7Ci0KLXN0YXRpYyBpbmxpbmUgYm9vbCBpb19maWxlX25l
ZWRfc2NtKHN0cnVjdCBmaWxlICpmaWxwKQotewotCXJldHVybiBmYWxzZTsKLX0KLQotc3Rh
dGljIGlubGluZSBpbnQgaW9fc2NtX2ZpbGVfYWNjb3VudChzdHJ1Y3QgaW9fcmluZ19jdHgg
KmN0eCwKLQkJCQkgICAgICBzdHJ1Y3QgZmlsZSAqZmlsZSkKLXsKLQlpZiAobGlrZWx5KCFp
b19maWxlX25lZWRfc2NtKGZpbGUpKSkKLQkJcmV0dXJuIDA7Ci0JcmV0dXJuIF9faW9fc2Nt
X2ZpbGVfYWNjb3VudChjdHgsIGZpbGUpOwotfQotCiBpbnQgaW9fcmVnaXN0ZXJfZmlsZXNf
dXBkYXRlKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB2b2lkIF9fdXNlciAqYXJnLAogCQkJ
ICAgICB1bnNpZ25lZCBucl9hcmdzKTsKIGludCBpb19yZWdpc3Rlcl9yc3JjX3VwZGF0ZShz
dHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBfX3VzZXIgKmFyZywKLS0gCjIuNDMuMAoK

--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="6.6-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Disposition: attachment;
 filename*0="6.6-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Transfer-Encoding: base64

RnJvbSBiNzA2MTg3ZDAyZWFjZWYxNTkyMmRlNWZhZmVkZDY1YmMyZGIwNTc2IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFR1ZSwgMTkgRGVjIDIwMjMgMTI6MzA6NDMgLTA3MDAKU3ViamVjdDogW1BBVENIIDEv
Ml0gaW9fdXJpbmcvdW5peDogZHJvcCB1c2FnZSBvZiBpb191cmluZyBzb2NrZXQKCkNvbW1p
dCBhNDEwNDgyMWFkNjUxZDhhMGIzNzRmMGIyNDc0YzM0NWJiYjQyZjgyIHVwc3RyZWFtLgoK
U2luY2Ugd2Ugbm8gbG9uZ2VyIGFsbG93IHNlbmRpbmcgaW9fdXJpbmcgZmRzIG92ZXIgU0NN
X1JJR0hUUywgbW92ZSB0bwp1c2luZyBpb19pc191cmluZ19mb3BzKCkgdG8gZGV0ZWN0IHdo
ZXRoZXIgdGhpcyBpcyBhIGlvX3VyaW5nIGZkIG9yIG5vdC4KV2l0aCB0aGF0IGRvbmUsIGtp
bGwgb2ZmIGlvX3VyaW5nX2dldF9zb2NrZXQoKSBhcyBub2JvZHkgY2FsbHMgaXQKYW55bW9y
ZS4KClRoaXMgaXMgaW4gcHJlcGFyYXRpb24gdG8geWFua2luZyBvdXQgdGhlIHJlc3Qgb2Yg
dGhlIGNvcmUgcmVsYXRlZCB0bwp1bml4IGdjIHdpdGggaW9fdXJpbmcuCgpTaWduZWQtb2Zm
LWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogaW5jbHVkZS9saW51eC9p
b191cmluZy5oIHwgMTAgKysrKystLS0tLQogaW9fdXJpbmcvaW9fdXJpbmcuYyAgICAgIHwg
MTMgLS0tLS0tLS0tLS0tLQogaW9fdXJpbmcvaW9fdXJpbmcuaCAgICAgIHwgIDEgLQogbmV0
L2NvcmUvc2NtLmMgICAgICAgICAgIHwgIDIgKy0KIG5ldC91bml4L3NjbS5jICAgICAgICAg
ICB8ICA0ICstLS0KIDUgZmlsZXMgY2hhbmdlZCwgNyBpbnNlcnRpb25zKCspLCAyMyBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nLmggYi9pbmNs
dWRlL2xpbnV4L2lvX3VyaW5nLmgKaW5kZXggMTA2Y2RjNTVmZjNiLi5mOTlmZjZkZTkyNmMg
MTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvaW9fdXJpbmcuaAorKysgYi9pbmNsdWRlL2xp
bnV4L2lvX3VyaW5nLmgKQEAgLTQ2LDcgKzQ2LDYgQEAgaW50IGlvX3VyaW5nX2NtZF9pbXBv
cnRfZml4ZWQodTY0IHVidWYsIHVuc2lnbmVkIGxvbmcgbGVuLCBpbnQgcncsCiAJCQkgICAg
ICBzdHJ1Y3QgaW92X2l0ZXIgKml0ZXIsIHZvaWQgKmlvdWNtZCk7CiB2b2lkIGlvX3VyaW5n
X2NtZF9kb25lKHN0cnVjdCBpb191cmluZ19jbWQgKmNtZCwgc3NpemVfdCByZXQsIHNzaXpl
X3QgcmVzMiwKIAkJCXVuc2lnbmVkIGlzc3VlX2ZsYWdzKTsKLXN0cnVjdCBzb2NrICppb191
cmluZ19nZXRfc29ja2V0KHN0cnVjdCBmaWxlICpmaWxlKTsKIHZvaWQgX19pb191cmluZ19j
YW5jZWwoYm9vbCBjYW5jZWxfYWxsKTsKIHZvaWQgX19pb191cmluZ19mcmVlKHN0cnVjdCB0
YXNrX3N0cnVjdCAqdHNrKTsKIHZvaWQgaW9fdXJpbmdfdW5yZWdfcmluZ2ZkKHZvaWQpOwpA
QCAtODIsNiArODEsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgaW9fdXJpbmdfZnJlZShzdHJ1
Y3QgdGFza19zdHJ1Y3QgKnRzaykKIAkJX19pb191cmluZ19mcmVlKHRzayk7CiB9CiBpbnQg
aW9fdXJpbmdfY21kX3NvY2soc3RydWN0IGlvX3VyaW5nX2NtZCAqY21kLCB1bnNpZ25lZCBp
bnQgaXNzdWVfZmxhZ3MpOworYm9vbCBpb19pc191cmluZ19mb3BzKHN0cnVjdCBmaWxlICpm
aWxlKTsKICNlbHNlCiBzdGF0aWMgaW5saW5lIGludCBpb191cmluZ19jbWRfaW1wb3J0X2Zp
eGVkKHU2NCB1YnVmLCB1bnNpZ25lZCBsb25nIGxlbiwgaW50IHJ3LAogCQkJICAgICAgc3Ry
dWN0IGlvdl9pdGVyICppdGVyLCB2b2lkICppb3VjbWQpCkBAIC0xMDAsMTAgKzEwMCw2IEBA
IHN0YXRpYyBpbmxpbmUgdm9pZCBpb191cmluZ19jbWRfZG9faW5fdGFza19sYXp5KHN0cnVj
dCBpb191cmluZ19jbWQgKmlvdWNtZCwKIAkJCXZvaWQgKCp0YXNrX3dvcmtfY2IpKHN0cnVj
dCBpb191cmluZ19jbWQgKiwgdW5zaWduZWQpKQogewogfQotc3RhdGljIGlubGluZSBzdHJ1
Y3Qgc29jayAqaW9fdXJpbmdfZ2V0X3NvY2tldChzdHJ1Y3QgZmlsZSAqZmlsZSkKLXsKLQly
ZXR1cm4gTlVMTDsKLX0KIHN0YXRpYyBpbmxpbmUgdm9pZCBpb191cmluZ190YXNrX2NhbmNl
bCh2b2lkKQogewogfQpAQCAtMTIyLDYgKzExOCwxMCBAQCBzdGF0aWMgaW5saW5lIGludCBp
b191cmluZ19jbWRfc29jayhzdHJ1Y3QgaW9fdXJpbmdfY21kICpjbWQsCiB7CiAJcmV0dXJu
IC1FT1BOT1RTVVBQOwogfQorc3RhdGljIGlubGluZSBib29sIGlvX2lzX3VyaW5nX2ZvcHMo
c3RydWN0IGZpbGUgKmZpbGUpCit7CisJcmV0dXJuIGZhbHNlOworfQogI2VuZGlmCiAKICNl
bmRpZgpkaWZmIC0tZ2l0IGEvaW9fdXJpbmcvaW9fdXJpbmcuYyBiL2lvX3VyaW5nL2lvX3Vy
aW5nLmMKaW5kZXggZWE3NzJhMDJjMTQwLi43NDdkMmE2ZWNhYjggMTAwNjQ0Ci0tLSBhL2lv
X3VyaW5nL2lvX3VyaW5nLmMKKysrIGIvaW9fdXJpbmcvaW9fdXJpbmcuYwpAQCAtMTc1LDE5
ICsxNzUsNiBAQCBzdGF0aWMgc3RydWN0IGN0bF90YWJsZSBrZXJuZWxfaW9fdXJpbmdfZGlz
YWJsZWRfdGFibGVbXSA9IHsKIH07CiAjZW5kaWYKIAotc3RydWN0IHNvY2sgKmlvX3VyaW5n
X2dldF9zb2NrZXQoc3RydWN0IGZpbGUgKmZpbGUpCi17Ci0jaWYgZGVmaW5lZChDT05GSUdf
VU5JWCkKLQlpZiAoaW9faXNfdXJpbmdfZm9wcyhmaWxlKSkgewotCQlzdHJ1Y3QgaW9fcmlu
Z19jdHggKmN0eCA9IGZpbGUtPnByaXZhdGVfZGF0YTsKLQotCQlyZXR1cm4gY3R4LT5yaW5n
X3NvY2stPnNrOwotCX0KLSNlbmRpZgotCXJldHVybiBOVUxMOwotfQotRVhQT1JUX1NZTUJP
TChpb191cmluZ19nZXRfc29ja2V0KTsKLQogc3RhdGljIGlubGluZSB2b2lkIGlvX3N1Ym1p
dF9mbHVzaF9jb21wbGV0aW9ucyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIHsKIAlpZiAo
IXdxX2xpc3RfZW1wdHkoJmN0eC0+c3VibWl0X3N0YXRlLmNvbXBsX3JlcXMpIHx8CmRpZmYg
LS1naXQgYS9pb191cmluZy9pb191cmluZy5oIGIvaW9fdXJpbmcvaW9fdXJpbmcuaAppbmRl
eCBjOGNiYTc4MzEwODMuLjQxMWM4ODNiMzdhOSAxMDA2NDQKLS0tIGEvaW9fdXJpbmcvaW9f
dXJpbmcuaAorKysgYi9pb191cmluZy9pb191cmluZy5oCkBAIC02MSw3ICs2MSw2IEBAIHN0
cnVjdCBmaWxlICppb19maWxlX2dldF9maXhlZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwgaW50
IGZkLAogCQkJICAgICAgIHVuc2lnbmVkIGlzc3VlX2ZsYWdzKTsKIAogdm9pZCBfX2lvX3Jl
cV90YXNrX3dvcmtfYWRkKHN0cnVjdCBpb19raW9jYiAqcmVxLCB1bnNpZ25lZCBmbGFncyk7
Ci1ib29sIGlvX2lzX3VyaW5nX2ZvcHMoc3RydWN0IGZpbGUgKmZpbGUpOwogYm9vbCBpb19h
bGxvY19hc3luY19kYXRhKHN0cnVjdCBpb19raW9jYiAqcmVxKTsKIHZvaWQgaW9fcmVxX3Rh
c2tfcXVldWUoc3RydWN0IGlvX2tpb2NiICpyZXEpOwogdm9pZCBpb19xdWV1ZV9pb3dxKHN0
cnVjdCBpb19raW9jYiAqcmVxLCBzdHJ1Y3QgaW9fdHdfc3RhdGUgKnRzX2RvbnRfdXNlKTsK
ZGlmZiAtLWdpdCBhL25ldC9jb3JlL3NjbS5jIGIvbmV0L2NvcmUvc2NtLmMKaW5kZXggN2Rj
NDdjMTdkODYzLi43Mzc5MTdjN2FjNjIgMTAwNjQ0Ci0tLSBhL25ldC9jb3JlL3NjbS5jCisr
KyBiL25ldC9jb3JlL3NjbS5jCkBAIC0xMDUsNyArMTA1LDcgQEAgc3RhdGljIGludCBzY21f
ZnBfY29weShzdHJ1Y3QgY21zZ2hkciAqY21zZywgc3RydWN0IHNjbV9mcF9saXN0ICoqZnBs
cCkKIAkJaWYgKGZkIDwgMCB8fCAhKGZpbGUgPSBmZ2V0X3JhdyhmZCkpKQogCQkJcmV0dXJu
IC1FQkFERjsKIAkJLyogZG9uJ3QgYWxsb3cgaW9fdXJpbmcgZmlsZXMgKi8KLQkJaWYgKGlv
X3VyaW5nX2dldF9zb2NrZXQoZmlsZSkpIHsKKwkJaWYgKGlvX2lzX3VyaW5nX2ZvcHMoZmls
ZSkpIHsKIAkJCWZwdXQoZmlsZSk7CiAJCQlyZXR1cm4gLUVJTlZBTDsKIAkJfQpkaWZmIC0t
Z2l0IGEvbmV0L3VuaXgvc2NtLmMgYi9uZXQvdW5peC9zY20uYwppbmRleCA2ZmY2MjhmMjM0
OWYuLjgyMmNlMGQwZDc5MSAxMDA2NDQKLS0tIGEvbmV0L3VuaXgvc2NtLmMKKysrIGIvbmV0
L3VuaXgvc2NtLmMKQEAgLTM1LDEwICszNSw4IEBAIHN0cnVjdCBzb2NrICp1bml4X2dldF9z
b2NrZXQoc3RydWN0IGZpbGUgKmZpbHApCiAJCS8qIFBGX1VOSVggPyAqLwogCQlpZiAocyAm
JiBvcHMgJiYgb3BzLT5mYW1pbHkgPT0gUEZfVU5JWCkKIAkJCXVfc29jayA9IHM7Ci0JfSBl
bHNlIHsKLQkJLyogQ291bGQgYmUgYW4gaW9fdXJpbmcgaW5zdGFuY2UgKi8KLQkJdV9zb2Nr
ID0gaW9fdXJpbmdfZ2V0X3NvY2tldChmaWxwKTsKIAl9CisKIAlyZXR1cm4gdV9zb2NrOwog
fQogRVhQT1JUX1NZTUJPTCh1bml4X2dldF9zb2NrZXQpOwotLSAKMi40My4wCgo=
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="6.1-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Disposition: attachment;
 filename*0="6.1-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Transfer-Encoding: base64

RnJvbSA0MmQwNDQ5ZjY1ZTY2MzJkZGM2Mzg5MjljNTM2NzZmYjc3NmQ4NDEyIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFdlZCwgMTMgTWFyIDIwMjQgMTg6MTA6MTIgLTA2MDAKU3ViamVjdDogW1BBVENIIDEv
Ml0gaW9fdXJpbmcvdW5peDogZHJvcCB1c2FnZSBvZiBpb191cmluZyBzb2NrZXQKCkNvbW1p
dCBhNDEwNDgyMWFkNjUxZDhhMGIzNzRmMGIyNDc0YzM0NWJiYjQyZjgyIHVwc3RyZWFtLgoK
U2luY2Ugd2Ugbm8gbG9uZ2VyIGFsbG93IHNlbmRpbmcgaW9fdXJpbmcgZmRzIG92ZXIgU0NN
X1JJR0hUUywgbW92ZSB0bwp1c2luZyBpb19pc191cmluZ19mb3BzKCkgdG8gZGV0ZWN0IHdo
ZXRoZXIgdGhpcyBpcyBhIGlvX3VyaW5nIGZkIG9yIG5vdC4KV2l0aCB0aGF0IGRvbmUsIGtp
bGwgb2ZmIGlvX3VyaW5nX2dldF9zb2NrZXQoKSBhcyBub2JvZHkgY2FsbHMgaXQKYW55bW9y
ZS4KClRoaXMgaXMgaW4gcHJlcGFyYXRpb24gdG8geWFua2luZyBvdXQgdGhlIHJlc3Qgb2Yg
dGhlIGNvcmUgcmVsYXRlZCB0bwp1bml4IGdjIHdpdGggaW9fdXJpbmcuCgpTaWduZWQtb2Zm
LWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogaW5jbHVkZS9saW51eC9p
b191cmluZy5oIHwgMTAgKysrKystLS0tLQogaW9fdXJpbmcvaW9fdXJpbmcuYyAgICAgIHwg
MTMgLS0tLS0tLS0tLS0tLQogaW9fdXJpbmcvaW9fdXJpbmcuaCAgICAgIHwgIDEgLQogbmV0
L2NvcmUvc2NtLmMgICAgICAgICAgIHwgIDIgKy0KIG5ldC91bml4L3NjbS5jICAgICAgICAg
ICB8ICA0ICstLS0KIDUgZmlsZXMgY2hhbmdlZCwgNyBpbnNlcnRpb25zKCspLCAyMyBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nLmggYi9pbmNs
dWRlL2xpbnV4L2lvX3VyaW5nLmgKaW5kZXggYTE0ODRjZGIzMTU4Li5hOGYzMDU4NDQ4ZWEg
MTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvaW9fdXJpbmcuaAorKysgYi9pbmNsdWRlL2xp
bnV4L2lvX3VyaW5nLmgKQEAgLTQyLDExICs0MiwxMSBAQCB2b2lkIGlvX3VyaW5nX2NtZF9k
b25lKHN0cnVjdCBpb191cmluZ19jbWQgKmNtZCwgc3NpemVfdCByZXQsIHNzaXplX3QgcmVz
MiwKIAkJCXVuc2lnbmVkIGlzc3VlX2ZsYWdzKTsKIHZvaWQgaW9fdXJpbmdfY21kX2NvbXBs
ZXRlX2luX3Rhc2soc3RydWN0IGlvX3VyaW5nX2NtZCAqaW91Y21kLAogCQkJdm9pZCAoKnRh
c2tfd29ya19jYikoc3RydWN0IGlvX3VyaW5nX2NtZCAqLCB1bnNpZ25lZCkpOwotc3RydWN0
IHNvY2sgKmlvX3VyaW5nX2dldF9zb2NrZXQoc3RydWN0IGZpbGUgKmZpbGUpOwogdm9pZCBf
X2lvX3VyaW5nX2NhbmNlbChib29sIGNhbmNlbF9hbGwpOwogdm9pZCBfX2lvX3VyaW5nX2Zy
ZWUoc3RydWN0IHRhc2tfc3RydWN0ICp0c2spOwogdm9pZCBpb191cmluZ191bnJlZ19yaW5n
ZmQodm9pZCk7CiBjb25zdCBjaGFyICppb191cmluZ19nZXRfb3Bjb2RlKHU4IG9wY29kZSk7
Citib29sIGlvX2lzX3VyaW5nX2ZvcHMoc3RydWN0IGZpbGUgKmZpbGUpOwogCiBzdGF0aWMg
aW5saW5lIHZvaWQgaW9fdXJpbmdfZmlsZXNfY2FuY2VsKHZvaWQpCiB7CkBAIC03MSw2ICs3
MSwxMCBAQCBzdGF0aWMgaW5saW5lIGludCBpb191cmluZ19jbWRfaW1wb3J0X2ZpeGVkKHU2
NCB1YnVmLCB1bnNpZ25lZCBsb25nIGxlbiwgaW50IHJ3LAogewogCXJldHVybiAtRU9QTk9U
U1VQUDsKIH0KK3N0YXRpYyBpbmxpbmUgYm9vbCBpb19pc191cmluZ19mb3BzKHN0cnVjdCBm
aWxlICpmaWxlKQoreworCXJldHVybiBmYWxzZTsKK30KIHN0YXRpYyBpbmxpbmUgdm9pZCBp
b191cmluZ19jbWRfZG9uZShzdHJ1Y3QgaW9fdXJpbmdfY21kICpjbWQsIHNzaXplX3QgcmV0
LAogCQlzc2l6ZV90IHJldDIsIHVuc2lnbmVkIGlzc3VlX2ZsYWdzKQogewpAQCAtNzksMTAg
KzgzLDYgQEAgc3RhdGljIGlubGluZSB2b2lkIGlvX3VyaW5nX2NtZF9jb21wbGV0ZV9pbl90
YXNrKHN0cnVjdCBpb191cmluZ19jbWQgKmlvdWNtZCwKIAkJCXZvaWQgKCp0YXNrX3dvcmtf
Y2IpKHN0cnVjdCBpb191cmluZ19jbWQgKiwgdW5zaWduZWQpKQogewogfQotc3RhdGljIGlu
bGluZSBzdHJ1Y3Qgc29jayAqaW9fdXJpbmdfZ2V0X3NvY2tldChzdHJ1Y3QgZmlsZSAqZmls
ZSkKLXsKLQlyZXR1cm4gTlVMTDsKLX0KIHN0YXRpYyBpbmxpbmUgdm9pZCBpb191cmluZ190
YXNrX2NhbmNlbCh2b2lkKQogewogfQpkaWZmIC0tZ2l0IGEvaW9fdXJpbmcvaW9fdXJpbmcu
YyBiL2lvX3VyaW5nL2lvX3VyaW5nLmMKaW5kZXggMzU4OTQ5NTViNDU0Li5jZjdkZDYyZGEw
ZTMgMTAwNjQ0Ci0tLSBhL2lvX3VyaW5nL2lvX3VyaW5nLmMKKysrIGIvaW9fdXJpbmcvaW9f
dXJpbmcuYwpAQCAtMTUzLDE5ICsxNTMsNiBAQCBzdGF0aWMgdm9pZCBfX2lvX3N1Ym1pdF9m
bHVzaF9jb21wbGV0aW9ucyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCk7CiAKIHN0YXRpYyBz
dHJ1Y3Qga21lbV9jYWNoZSAqcmVxX2NhY2hlcDsKIAotc3RydWN0IHNvY2sgKmlvX3VyaW5n
X2dldF9zb2NrZXQoc3RydWN0IGZpbGUgKmZpbGUpCi17Ci0jaWYgZGVmaW5lZChDT05GSUdf
VU5JWCkKLQlpZiAoaW9faXNfdXJpbmdfZm9wcyhmaWxlKSkgewotCQlzdHJ1Y3QgaW9fcmlu
Z19jdHggKmN0eCA9IGZpbGUtPnByaXZhdGVfZGF0YTsKLQotCQlyZXR1cm4gY3R4LT5yaW5n
X3NvY2stPnNrOwotCX0KLSNlbmRpZgotCXJldHVybiBOVUxMOwotfQotRVhQT1JUX1NZTUJP
TChpb191cmluZ19nZXRfc29ja2V0KTsKLQogc3RhdGljIGlubGluZSB2b2lkIGlvX3N1Ym1p
dF9mbHVzaF9jb21wbGV0aW9ucyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCkKIHsKIAlpZiAo
IXdxX2xpc3RfZW1wdHkoJmN0eC0+c3VibWl0X3N0YXRlLmNvbXBsX3JlcXMpKQpkaWZmIC0t
Z2l0IGEvaW9fdXJpbmcvaW9fdXJpbmcuaCBiL2lvX3VyaW5nL2lvX3VyaW5nLmgKaW5kZXgg
MDE5NjAwNTcwZWU0Li41OWU2Zjc1NWYxMmMgMTAwNjQ0Ci0tLSBhL2lvX3VyaW5nL2lvX3Vy
aW5nLmgKKysrIGIvaW9fdXJpbmcvaW9fdXJpbmcuaApAQCAtNTIsNyArNTIsNiBAQCBzdGF0
aWMgaW5saW5lIGJvb2wgaW9fcmVxX2Zmc19zZXQoc3RydWN0IGlvX2tpb2NiICpyZXEpCiB9
CiAKIHZvaWQgX19pb19yZXFfdGFza193b3JrX2FkZChzdHJ1Y3QgaW9fa2lvY2IgKnJlcSwg
Ym9vbCBhbGxvd19sb2NhbCk7Ci1ib29sIGlvX2lzX3VyaW5nX2ZvcHMoc3RydWN0IGZpbGUg
KmZpbGUpOwogYm9vbCBpb19hbGxvY19hc3luY19kYXRhKHN0cnVjdCBpb19raW9jYiAqcmVx
KTsKIHZvaWQgaW9fcmVxX3Rhc2tfcXVldWUoc3RydWN0IGlvX2tpb2NiICpyZXEpOwogdm9p
ZCBpb19xdWV1ZV9pb3dxKHN0cnVjdCBpb19raW9jYiAqcmVxLCBib29sICpkb250X3VzZSk7
CmRpZmYgLS1naXQgYS9uZXQvY29yZS9zY20uYyBiL25ldC9jb3JlL3NjbS5jCmluZGV4IGU3
NjJhNGI4YTFkMi4uYTg3N2M0ZWY0YzI1IDEwMDY0NAotLS0gYS9uZXQvY29yZS9zY20uYwor
KysgYi9uZXQvY29yZS9zY20uYwpAQCAtMTA1LDcgKzEwNSw3IEBAIHN0YXRpYyBpbnQgc2Nt
X2ZwX2NvcHkoc3RydWN0IGNtc2doZHIgKmNtc2csIHN0cnVjdCBzY21fZnBfbGlzdCAqKmZw
bHApCiAJCWlmIChmZCA8IDAgfHwgIShmaWxlID0gZmdldF9yYXcoZmQpKSkKIAkJCXJldHVy
biAtRUJBREY7CiAJCS8qIGRvbid0IGFsbG93IGlvX3VyaW5nIGZpbGVzICovCi0JCWlmIChp
b191cmluZ19nZXRfc29ja2V0KGZpbGUpKSB7CisJCWlmIChpb19pc191cmluZ19mb3BzKGZp
bGUpKSB7CiAJCQlmcHV0KGZpbGUpOwogCQkJcmV0dXJuIC1FSU5WQUw7CiAJCX0KZGlmZiAt
LWdpdCBhL25ldC91bml4L3NjbS5jIGIvbmV0L3VuaXgvc2NtLmMKaW5kZXggZThlMmEwMGJi
MGY1Li5kMTA0OGI0YzJiYWEgMTAwNjQ0Ci0tLSBhL25ldC91bml4L3NjbS5jCisrKyBiL25l
dC91bml4L3NjbS5jCkBAIC0zNCwxMCArMzQsOCBAQCBzdHJ1Y3Qgc29jayAqdW5peF9nZXRf
c29ja2V0KHN0cnVjdCBmaWxlICpmaWxwKQogCQkvKiBQRl9VTklYID8gKi8KIAkJaWYgKHMg
JiYgc29jay0+b3BzICYmIHNvY2stPm9wcy0+ZmFtaWx5ID09IFBGX1VOSVgpCiAJCQl1X3Nv
Y2sgPSBzOwotCX0gZWxzZSB7Ci0JCS8qIENvdWxkIGJlIGFuIGlvX3VyaW5nIGluc3RhbmNl
ICovCi0JCXVfc29jayA9IGlvX3VyaW5nX2dldF9zb2NrZXQoZmlscCk7CiAJfQorCiAJcmV0
dXJuIHVfc29jazsKIH0KIEVYUE9SVF9TWU1CT0wodW5peF9nZXRfc29ja2V0KTsKLS0gCjIu
NDMuMAoK
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="6.1-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Disposition: attachment;
 filename*0="6.1-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Transfer-Encoding: base64

RnJvbSAwODM5NzQwMDJiNmY0NWJiODQwOTBhOWFlZDAyNWQ4YTNkODQ3OWNiIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFdlZCwgMTMgTWFyIDIwMjQgMTg6MTU6MDUgLTA2MDAKU3ViamVjdDogW1BBVENIIDIv
Ml0gaW9fdXJpbmc6IGRyb3AgYW55IGNvZGUgcmVsYXRlZCB0byBTQ01fUklHSFRTCgpDb21t
aXQgNmU1ZTZkMjc0OTU2MzA1ZjFmYzAzNDA1MjJiMzhmNWY1YmU3NGJkYiB1cHN0cmVhbS4K
ClRoaXMgaXMgZGVhZCBjb2RlIGFmdGVyIHdlIGRyb3BwZWQgc3VwcG9ydCBmb3IgcGFzc2lu
ZyBpb191cmluZyBmZHMKb3ZlciBTQ01fUklHSFRTLCBnZXQgcmlkIG9mIGl0LgoKU2lnbmVk
LW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGluY2x1ZGUvbGlu
dXgvaW9fdXJpbmdfdHlwZXMuaCB8ICAgMyAtCiBpb191cmluZy9maWxldGFibGUuYyAgICAg
ICAgICAgfCAgMTAgKy0tCiBpb191cmluZy9pb191cmluZy5jICAgICAgICAgICAgfCAgMzEg
Ky0tLS0tLQogaW9fdXJpbmcvcnNyYy5jICAgICAgICAgICAgICAgIHwgMTUxICstLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogaW9fdXJpbmcvcnNyYy5oICAgICAgICAgICAg
ICAgIHwgIDE1IC0tLS0KIDUgZmlsZXMgY2hhbmdlZCwgOCBpbnNlcnRpb25zKCspLCAyMDIg
ZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9pb191cmluZ190eXBl
cy5oIGIvaW5jbHVkZS9saW51eC9pb191cmluZ190eXBlcy5oCmluZGV4IGY1YjY4N2E3ODdh
My4uMzdhZWVhMjY2ZWJiIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nX3R5
cGVzLmgKKysrIGIvaW5jbHVkZS9saW51eC9pb191cmluZ190eXBlcy5oCkBAIC0zMzAsOSAr
MzMwLDYgQEAgc3RydWN0IGlvX3JpbmdfY3R4IHsKIAogCXN0cnVjdCBsaXN0X2hlYWQJCWlv
X2J1ZmZlcnNfcGFnZXM7CiAKLQkjaWYgZGVmaW5lZChDT05GSUdfVU5JWCkKLQkJc3RydWN0
IHNvY2tldAkJKnJpbmdfc29jazsKLQkjZW5kaWYKIAkvKiBoYXNoZWQgYnVmZmVyZWQgd3Jp
dGUgc2VyaWFsaXphdGlvbiAqLwogCXN0cnVjdCBpb193cV9oYXNoCQkqaGFzaF9tYXA7CiAK
ZGlmZiAtLWdpdCBhL2lvX3VyaW5nL2ZpbGV0YWJsZS5jIGIvaW9fdXJpbmcvZmlsZXRhYmxl
LmMKaW5kZXggYjgwNjE0ZTdkNjA1Li40NjYwY2I4OWVhOWYgMTAwNjQ0Ci0tLSBhL2lvX3Vy
aW5nL2ZpbGV0YWJsZS5jCisrKyBiL2lvX3VyaW5nL2ZpbGV0YWJsZS5jCkBAIC05NSwxMiAr
OTUsMTAgQEAgc3RhdGljIGludCBpb19pbnN0YWxsX2ZpeGVkX2ZpbGUoc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHgsIHN0cnVjdCBmaWxlICpmaWxlLAogCQluZWVkc19zd2l0Y2ggPSB0cnVl
OwogCX0KIAotCXJldCA9IGlvX3NjbV9maWxlX2FjY291bnQoY3R4LCBmaWxlKTsKLQlpZiAo
IXJldCkgewotCQkqaW9fZ2V0X3RhZ19zbG90KGN0eC0+ZmlsZV9kYXRhLCBzbG90X2luZGV4
KSA9IDA7Ci0JCWlvX2ZpeGVkX2ZpbGVfc2V0KGZpbGVfc2xvdCwgZmlsZSk7Ci0JCWlvX2Zp
bGVfYml0bWFwX3NldCgmY3R4LT5maWxlX3RhYmxlLCBzbG90X2luZGV4KTsKLQl9CisJKmlv
X2dldF90YWdfc2xvdChjdHgtPmZpbGVfZGF0YSwgc2xvdF9pbmRleCkgPSAwOworCWlvX2Zp
eGVkX2ZpbGVfc2V0KGZpbGVfc2xvdCwgZmlsZSk7CisJaW9fZmlsZV9iaXRtYXBfc2V0KCZj
dHgtPmZpbGVfdGFibGUsIHNsb3RfaW5kZXgpOworCXJldHVybiAwOwogZXJyOgogCWlmIChu
ZWVkc19zd2l0Y2gpCiAJCWlvX3JzcmNfbm9kZV9zd2l0Y2goY3R4LCBjdHgtPmZpbGVfZGF0
YSk7CmRpZmYgLS1naXQgYS9pb191cmluZy9pb191cmluZy5jIGIvaW9fdXJpbmcvaW9fdXJp
bmcuYwppbmRleCBjZjdkZDYyZGEwZTMuLjQxNTI0OGMxZjgyYyAxMDA2NDQKLS0tIGEvaW9f
dXJpbmcvaW9fdXJpbmcuYworKysgYi9pb191cmluZy9pb191cmluZy5jCkBAIC02MCw3ICs2
MCw2IEBACiAjaW5jbHVkZSA8bGludXgvbmV0Lmg+CiAjaW5jbHVkZSA8bmV0L3NvY2suaD4K
ICNpbmNsdWRlIDxuZXQvYWZfdW5peC5oPgotI2luY2x1ZGUgPG5ldC9zY20uaD4KICNpbmNs
dWRlIDxsaW51eC9hbm9uX2lub2Rlcy5oPgogI2luY2x1ZGUgPGxpbnV4L3NjaGVkL21tLmg+
CiAjaW5jbHVkZSA8bGludXgvdWFjY2Vzcy5oPgpAQCAtMjYyOCwxMiArMjYyNyw2IEBAIHN0
YXRpYyBfX2NvbGQgdm9pZCBpb19yaW5nX2N0eF9mcmVlKHN0cnVjdCBpb19yaW5nX2N0eCAq
Y3R4KQogCVdBUk5fT05fT05DRSghbGlzdF9lbXB0eSgmY3R4LT5yc3JjX3JlZl9saXN0KSk7
CiAJV0FSTl9PTl9PTkNFKCFsbGlzdF9lbXB0eSgmY3R4LT5yc3JjX3B1dF9sbGlzdCkpOwog
Ci0jaWYgZGVmaW5lZChDT05GSUdfVU5JWCkKLQlpZiAoY3R4LT5yaW5nX3NvY2spIHsKLQkJ
Y3R4LT5yaW5nX3NvY2stPmZpbGUgPSBOVUxMOyAvKiBzbyB0aGF0IGlwdXQoKSBpcyBjYWxs
ZWQgKi8KLQkJc29ja19yZWxlYXNlKGN0eC0+cmluZ19zb2NrKTsKLQl9Ci0jZW5kaWYKIAlX
QVJOX09OX09OQ0UoIWxpc3RfZW1wdHkoJmN0eC0+bHRpbWVvdXRfbGlzdCkpOwogCiAJaWYg
KGN0eC0+bW1fYWNjb3VudCkgewpAQCAtMzQzOCwzMiArMzQzMSwxMiBAQCBzdGF0aWMgaW50
IGlvX3VyaW5nX2luc3RhbGxfZmQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0cnVjdCBm
aWxlICpmaWxlKQogLyoKICAqIEFsbG9jYXRlIGFuIGFub255bW91cyBmZCwgdGhpcyBpcyB3
aGF0IGNvbnN0aXR1dGVzIHRoZSBhcHBsaWNhdGlvbgogICogdmlzaWJsZSBiYWNraW5nIG9m
IGFuIGlvX3VyaW5nIGluc3RhbmNlLiBUaGUgYXBwbGljYXRpb24gbW1hcHMgdGhpcwotICog
ZmQgdG8gZ2FpbiBhY2Nlc3MgdG8gdGhlIFNRL0NRIHJpbmcgZGV0YWlscy4gSWYgVU5JWCBz
b2NrZXRzIGFyZSBlbmFibGVkLAotICogd2UgaGF2ZSB0byB0aWUgdGhpcyBmZCB0byBhIHNv
Y2tldCBmb3IgZmlsZSBnYXJiYWdlIGNvbGxlY3Rpb24gcHVycG9zZXMuCisgKiBmZCB0byBn
YWluIGFjY2VzcyB0byB0aGUgU1EvQ1EgcmluZyBkZXRhaWxzLgogICovCiBzdGF0aWMgc3Ry
dWN0IGZpbGUgKmlvX3VyaW5nX2dldF9maWxlKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQog
ewotCXN0cnVjdCBmaWxlICpmaWxlOwotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0JaW50
IHJldDsKLQotCXJldCA9IHNvY2tfY3JlYXRlX2tlcm4oJmluaXRfbmV0LCBQRl9VTklYLCBT
T0NLX1JBVywgSVBQUk9UT19JUCwKLQkJCQkmY3R4LT5yaW5nX3NvY2spOwotCWlmIChyZXQp
Ci0JCXJldHVybiBFUlJfUFRSKHJldCk7Ci0jZW5kaWYKLQotCWZpbGUgPSBhbm9uX2lub2Rl
X2dldGZpbGVfc2VjdXJlKCJbaW9fdXJpbmddIiwgJmlvX3VyaW5nX2ZvcHMsIGN0eCwKKwly
ZXR1cm4gYW5vbl9pbm9kZV9nZXRmaWxlX3NlY3VyZSgiW2lvX3VyaW5nXSIsICZpb191cmlu
Z19mb3BzLCBjdHgsCiAJCQkJCSBPX1JEV1IgfCBPX0NMT0VYRUMsIE5VTEwpOwotI2lmIGRl
ZmluZWQoQ09ORklHX1VOSVgpCi0JaWYgKElTX0VSUihmaWxlKSkgewotCQlzb2NrX3JlbGVh
c2UoY3R4LT5yaW5nX3NvY2spOwotCQljdHgtPnJpbmdfc29jayA9IE5VTEw7Ci0JfSBlbHNl
IHsKLQkJY3R4LT5yaW5nX3NvY2stPmZpbGUgPSBmaWxlOwotCX0KLSNlbmRpZgotCXJldHVy
biBmaWxlOwogfQogCiBzdGF0aWMgX19jb2xkIGludCBpb191cmluZ19jcmVhdGUodW5zaWdu
ZWQgZW50cmllcywgc3RydWN0IGlvX3VyaW5nX3BhcmFtcyAqcCwKZGlmZiAtLWdpdCBhL2lv
X3VyaW5nL3JzcmMuYyBiL2lvX3VyaW5nL3JzcmMuYwppbmRleCA3YWRhMDMzOWIzODcuLmFj
NjU4Y2ZhODljNiAxMDA2NDQKLS0tIGEvaW9fdXJpbmcvcnNyYy5jCisrKyBiL2lvX3VyaW5n
L3JzcmMuYwpAQCAtNDk0LDExICs0OTQsNiBAQCBzdGF0aWMgaW50IF9faW9fc3FlX2ZpbGVz
X3VwZGF0ZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKIAkJCQllcnIgPSAtRUJBREY7CiAJ
CQkJYnJlYWs7CiAJCQl9Ci0JCQllcnIgPSBpb19zY21fZmlsZV9hY2NvdW50KGN0eCwgZmls
ZSk7Ci0JCQlpZiAoZXJyKSB7Ci0JCQkJZnB1dChmaWxlKTsKLQkJCQlicmVhazsKLQkJCX0K
IAkJCSppb19nZXRfdGFnX3Nsb3QoZGF0YSwgaSkgPSB0YWc7CiAJCQlpb19maXhlZF9maWxl
X3NldChmaWxlX3Nsb3QsIGZpbGUpOwogCQkJaW9fZmlsZV9iaXRtYXBfc2V0KCZjdHgtPmZp
bGVfdGFibGUsIGkpOwpAQCAtNzYyLDIyICs3NTcsMTIgQEAgdm9pZCBfX2lvX3NxZV9maWxl
c191bnJlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQogCWZvciAoaSA9IDA7IGkg
PCBjdHgtPm5yX3VzZXJfZmlsZXM7IGkrKykgewogCQlzdHJ1Y3QgZmlsZSAqZmlsZSA9IGlv
X2ZpbGVfZnJvbV9pbmRleCgmY3R4LT5maWxlX3RhYmxlLCBpKTsKIAotCQkvKiBza2lwIHNj
bSBhY2NvdW50ZWQgZmlsZXMsIHRoZXknbGwgYmUgZnJlZWQgYnkgLT5yaW5nX3NvY2sgKi8K
LQkJaWYgKCFmaWxlIHx8IGlvX2ZpbGVfbmVlZF9zY20oZmlsZSkpCisJCWlmICghZmlsZSkK
IAkJCWNvbnRpbnVlOwogCQlpb19maWxlX2JpdG1hcF9jbGVhcigmY3R4LT5maWxlX3RhYmxl
LCBpKTsKIAkJZnB1dChmaWxlKTsKIAl9CiAKLSNpZiBkZWZpbmVkKENPTkZJR19VTklYKQot
CWlmIChjdHgtPnJpbmdfc29jaykgewotCQlzdHJ1Y3Qgc29jayAqc29jayA9IGN0eC0+cmlu
Z19zb2NrLT5zazsKLQkJc3RydWN0IHNrX2J1ZmYgKnNrYjsKLQotCQl3aGlsZSAoKHNrYiA9
IHNrYl9kZXF1ZXVlKCZzb2NrLT5za19yZWNlaXZlX3F1ZXVlKSkgIT0gTlVMTCkKLQkJCWtm
cmVlX3NrYihza2IpOwotCX0KLSNlbmRpZgogCWlvX2ZyZWVfZmlsZV90YWJsZXMoJmN0eC0+
ZmlsZV90YWJsZSk7CiAJaW9fZmlsZV90YWJsZV9zZXRfYWxsb2NfcmFuZ2UoY3R4LCAwLCAw
KTsKIAlpb19yc3JjX2RhdGFfZnJlZShjdHgtPmZpbGVfZGF0YSk7CkBAIC04MDUsMTM0ICs3
OTAsMTEgQEAgaW50IGlvX3NxZV9maWxlc191bnJlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0
eCAqY3R4KQogCXJldHVybiByZXQ7CiB9CiAKLS8qCi0gKiBFbnN1cmUgdGhlIFVOSVggZ2Mg
aXMgYXdhcmUgb2Ygb3VyIGZpbGUgc2V0LCBzbyB3ZSBhcmUgY2VydGFpbiB0aGF0Ci0gKiB0
aGUgaW9fdXJpbmcgY2FuIGJlIHNhZmVseSB1bnJlZ2lzdGVyZWQgb24gcHJvY2VzcyBleGl0
LCBldmVuIGlmIHdlIGhhdmUKLSAqIGxvb3BzIGluIHRoZSBmaWxlIHJlZmVyZW5jaW5nLiBX
ZSBhY2NvdW50IG9ubHkgZmlsZXMgdGhhdCBjYW4gaG9sZCBvdGhlcgotICogZmlsZXMgYmVj
YXVzZSBvdGhlcndpc2UgdGhleSBjYW4ndCBmb3JtIGEgbG9vcCBhbmQgc28gYXJlIG5vdCBp
bnRlcmVzdGluZwotICogZm9yIEdDLgotICovCi1pbnQgX19pb19zY21fZmlsZV9hY2NvdW50
KHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBzdHJ1Y3QgZmlsZSAqZmlsZSkKLXsKLSNpZiBk
ZWZpbmVkKENPTkZJR19VTklYKQotCXN0cnVjdCBzb2NrICpzayA9IGN0eC0+cmluZ19zb2Nr
LT5zazsKLQlzdHJ1Y3Qgc2tfYnVmZl9oZWFkICpoZWFkID0gJnNrLT5za19yZWNlaXZlX3F1
ZXVlOwotCXN0cnVjdCBzY21fZnBfbGlzdCAqZnBsOwotCXN0cnVjdCBza19idWZmICpza2I7
Ci0KLQlpZiAobGlrZWx5KCFpb19maWxlX25lZWRfc2NtKGZpbGUpKSkKLQkJcmV0dXJuIDA7
Ci0KLQkvKgotCSAqIFNlZSBpZiB3ZSBjYW4gbWVyZ2UgdGhpcyBmaWxlIGludG8gYW4gZXhp
c3Rpbmcgc2tiIFNDTV9SSUdIVFMKLQkgKiBmaWxlIHNldC4gSWYgdGhlcmUncyBubyByb29t
LCBmYWxsIGJhY2sgdG8gYWxsb2NhdGluZyBhIG5ldyBza2IKLQkgKiBhbmQgZmlsbGluZyBp
dCBpbi4KLQkgKi8KLQlzcGluX2xvY2tfaXJxKCZoZWFkLT5sb2NrKTsKLQlza2IgPSBza2Jf
cGVlayhoZWFkKTsKLQlpZiAoc2tiICYmIFVOSVhDQihza2IpLmZwLT5jb3VudCA8IFNDTV9N
QVhfRkQpCi0JCV9fc2tiX3VubGluayhza2IsIGhlYWQpOwotCWVsc2UKLQkJc2tiID0gTlVM
TDsKLQlzcGluX3VubG9ja19pcnEoJmhlYWQtPmxvY2spOwotCi0JaWYgKCFza2IpIHsKLQkJ
ZnBsID0ga3phbGxvYyhzaXplb2YoKmZwbCksIEdGUF9LRVJORUwpOwotCQlpZiAoIWZwbCkK
LQkJCXJldHVybiAtRU5PTUVNOwotCi0JCXNrYiA9IGFsbG9jX3NrYigwLCBHRlBfS0VSTkVM
KTsKLQkJaWYgKCFza2IpIHsKLQkJCWtmcmVlKGZwbCk7Ci0JCQlyZXR1cm4gLUVOT01FTTsK
LQkJfQotCi0JCWZwbC0+dXNlciA9IGdldF91aWQoY3VycmVudF91c2VyKCkpOwotCQlmcGwt
Pm1heCA9IFNDTV9NQVhfRkQ7Ci0JCWZwbC0+Y291bnQgPSAwOwotCi0JCVVOSVhDQihza2Ip
LmZwID0gZnBsOwotCQlza2ItPnNrID0gc2s7Ci0JCXNrYi0+c2NtX2lvX3VyaW5nID0gMTsK
LQkJc2tiLT5kZXN0cnVjdG9yID0gdW5peF9kZXN0cnVjdF9zY207Ci0JCXJlZmNvdW50X2Fk
ZChza2ItPnRydWVzaXplLCAmc2stPnNrX3dtZW1fYWxsb2MpOwotCX0KLQotCWZwbCA9IFVO
SVhDQihza2IpLmZwOwotCWZwbC0+ZnBbZnBsLT5jb3VudCsrXSA9IGdldF9maWxlKGZpbGUp
OwotCXVuaXhfaW5mbGlnaHQoZnBsLT51c2VyLCBmaWxlKTsKLQlza2JfcXVldWVfaGVhZCho
ZWFkLCBza2IpOwotCWZwdXQoZmlsZSk7Ci0jZW5kaWYKLQlyZXR1cm4gMDsKLX0KLQogc3Rh
dGljIHZvaWQgaW9fcnNyY19maWxlX3B1dChzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgc3Ry
dWN0IGlvX3JzcmNfcHV0ICpwcnNyYykKIHsKIAlzdHJ1Y3QgZmlsZSAqZmlsZSA9IHByc3Jj
LT5maWxlOwotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0Jc3RydWN0IHNvY2sgKnNvY2sg
PSBjdHgtPnJpbmdfc29jay0+c2s7Ci0Jc3RydWN0IHNrX2J1ZmZfaGVhZCBsaXN0LCAqaGVh
ZCA9ICZzb2NrLT5za19yZWNlaXZlX3F1ZXVlOwotCXN0cnVjdCBza19idWZmICpza2I7Ci0J
aW50IGk7Ci0KLQlpZiAoIWlvX2ZpbGVfbmVlZF9zY20oZmlsZSkpIHsKLQkJZnB1dChmaWxl
KTsKLQkJcmV0dXJuOwotCX0KLQotCV9fc2tiX3F1ZXVlX2hlYWRfaW5pdCgmbGlzdCk7Ci0K
LQkvKgotCSAqIEZpbmQgdGhlIHNrYiB0aGF0IGhvbGRzIHRoaXMgZmlsZSBpbiBpdHMgU0NN
X1JJR0hUUy4gV2hlbiBmb3VuZCwKLQkgKiByZW1vdmUgdGhpcyBlbnRyeSBhbmQgcmVhcnJh
bmdlIHRoZSBmaWxlIGFycmF5LgotCSAqLwotCXNrYiA9IHNrYl9kZXF1ZXVlKGhlYWQpOwot
CXdoaWxlIChza2IpIHsKLQkJc3RydWN0IHNjbV9mcF9saXN0ICpmcDsKIAotCQlmcCA9IFVO
SVhDQihza2IpLmZwOwotCQlmb3IgKGkgPSAwOyBpIDwgZnAtPmNvdW50OyBpKyspIHsKLQkJ
CWludCBsZWZ0OwotCi0JCQlpZiAoZnAtPmZwW2ldICE9IGZpbGUpCi0JCQkJY29udGludWU7
Ci0KLQkJCXVuaXhfbm90aW5mbGlnaHQoZnAtPnVzZXIsIGZwLT5mcFtpXSk7Ci0JCQlsZWZ0
ID0gZnAtPmNvdW50IC0gMSAtIGk7Ci0JCQlpZiAobGVmdCkgewotCQkJCW1lbW1vdmUoJmZw
LT5mcFtpXSwgJmZwLT5mcFtpICsgMV0sCi0JCQkJCQlsZWZ0ICogc2l6ZW9mKHN0cnVjdCBm
aWxlICopKTsKLQkJCX0KLQkJCWZwLT5jb3VudC0tOwotCQkJaWYgKCFmcC0+Y291bnQpIHsK
LQkJCQlrZnJlZV9za2Ioc2tiKTsKLQkJCQlza2IgPSBOVUxMOwotCQkJfSBlbHNlIHsKLQkJ
CQlfX3NrYl9xdWV1ZV90YWlsKCZsaXN0LCBza2IpOwotCQkJfQotCQkJZnB1dChmaWxlKTsK
LQkJCWZpbGUgPSBOVUxMOwotCQkJYnJlYWs7Ci0JCX0KLQotCQlpZiAoIWZpbGUpCi0JCQli
cmVhazsKLQotCQlfX3NrYl9xdWV1ZV90YWlsKCZsaXN0LCBza2IpOwotCi0JCXNrYiA9IHNr
Yl9kZXF1ZXVlKGhlYWQpOwotCX0KLQotCWlmIChza2JfcGVlaygmbGlzdCkpIHsKLQkJc3Bp
bl9sb2NrX2lycSgmaGVhZC0+bG9jayk7Ci0JCXdoaWxlICgoc2tiID0gX19za2JfZGVxdWV1
ZSgmbGlzdCkpICE9IE5VTEwpCi0JCQlfX3NrYl9xdWV1ZV90YWlsKGhlYWQsIHNrYik7Ci0J
CXNwaW5fdW5sb2NrX2lycSgmaGVhZC0+bG9jayk7Ci0JfQotI2Vsc2UKIAlmcHV0KGZpbGUp
OwotI2VuZGlmCiB9CiAKIGludCBpb19zcWVfZmlsZXNfcmVnaXN0ZXIoc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHgsIHZvaWQgX191c2VyICphcmcsCkBAIC05ODYsMjEgKzg0OCwxMiBAQCBp
bnQgaW9fc3FlX2ZpbGVzX3JlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4LCB2b2lk
IF9fdXNlciAqYXJnLAogCQkJZ290byBmYWlsOwogCiAJCS8qCi0JCSAqIERvbid0IGFsbG93
IGlvX3VyaW5nIGluc3RhbmNlcyB0byBiZSByZWdpc3RlcmVkLiBJZiBVTklYCi0JCSAqIGlz
bid0IGVuYWJsZWQsIHRoZW4gdGhpcyBjYXVzZXMgYSByZWZlcmVuY2UgY3ljbGUgYW5kIHRo
aXMKLQkJICogaW5zdGFuY2UgY2FuIG5ldmVyIGdldCBmcmVlZC4gSWYgVU5JWCBpcyBlbmFi
bGVkIHdlJ2xsCi0JCSAqIGhhbmRsZSBpdCBqdXN0IGZpbmUsIGJ1dCB0aGVyZSdzIHN0aWxs
IG5vIHBvaW50IGluIGFsbG93aW5nCi0JCSAqIGEgcmluZyBmZCBhcyBpdCBkb2Vzbid0IHN1
cHBvcnQgcmVndWxhciByZWFkL3dyaXRlIGFueXdheS4KKwkJICogRG9uJ3QgYWxsb3cgaW9f
dXJpbmcgaW5zdGFuY2VzIHRvIGJlIHJlZ2lzdGVyZWQuCiAJCSAqLwogCQlpZiAoaW9faXNf
dXJpbmdfZm9wcyhmaWxlKSkgewogCQkJZnB1dChmaWxlKTsKIAkJCWdvdG8gZmFpbDsKIAkJ
fQotCQlyZXQgPSBpb19zY21fZmlsZV9hY2NvdW50KGN0eCwgZmlsZSk7Ci0JCWlmIChyZXQp
IHsKLQkJCWZwdXQoZmlsZSk7Ci0JCQlnb3RvIGZhaWw7Ci0JCX0KIAkJZmlsZV9zbG90ID0g
aW9fZml4ZWRfZmlsZV9zbG90KCZjdHgtPmZpbGVfdGFibGUsIGkpOwogCQlpb19maXhlZF9m
aWxlX3NldChmaWxlX3Nsb3QsIGZpbGUpOwogCQlpb19maWxlX2JpdG1hcF9zZXQoJmN0eC0+
ZmlsZV90YWJsZSwgaSk7CmRpZmYgLS1naXQgYS9pb191cmluZy9yc3JjLmggYi9pb191cmlu
Zy9yc3JjLmgKaW5kZXggYWNhZjhkYWQwNTQwLi44NWYxNDU2MDdjNjIgMTAwNjQ0Ci0tLSBh
L2lvX3VyaW5nL3JzcmMuaAorKysgYi9pb191cmluZy9yc3JjLmgKQEAgLTc3LDIxICs3Nyw2
IEBAIGludCBpb19zcWVfZmlsZXNfdW5yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19jdHggKmN0
eCk7CiBpbnQgaW9fc3FlX2ZpbGVzX3JlZ2lzdGVyKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4
LCB2b2lkIF9fdXNlciAqYXJnLAogCQkJICB1bnNpZ25lZCBucl9hcmdzLCB1NjQgX191c2Vy
ICp0YWdzKTsKIAotaW50IF9faW9fc2NtX2ZpbGVfYWNjb3VudChzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCwgc3RydWN0IGZpbGUgKmZpbGUpOwotCi1zdGF0aWMgaW5saW5lIGJvb2wgaW9f
ZmlsZV9uZWVkX3NjbShzdHJ1Y3QgZmlsZSAqZmlscCkKLXsKLQlyZXR1cm4gZmFsc2U7Ci19
Ci0KLXN0YXRpYyBpbmxpbmUgaW50IGlvX3NjbV9maWxlX2FjY291bnQoc3RydWN0IGlvX3Jp
bmdfY3R4ICpjdHgsCi0JCQkJICAgICAgc3RydWN0IGZpbGUgKmZpbGUpCi17Ci0JaWYgKGxp
a2VseSghaW9fZmlsZV9uZWVkX3NjbShmaWxlKSkpCi0JCXJldHVybiAwOwotCXJldHVybiBf
X2lvX3NjbV9maWxlX2FjY291bnQoY3R4LCBmaWxlKTsKLX0KLQogaW50IGlvX3JlZ2lzdGVy
X2ZpbGVzX3VwZGF0ZShzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwgdm9pZCBfX3VzZXIgKmFy
ZywKIAkJCSAgICAgdW5zaWduZWQgbnJfYXJncyk7CiBpbnQgaW9fcmVnaXN0ZXJfcnNyY191
cGRhdGUoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHZvaWQgX191c2VyICphcmcsCi0tIAoy
LjQzLjAKCg==
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="5.10-5.15-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.patch"
Content-Disposition: attachment;
 filename*0="5.10-5.15-0002-io_uring-drop-any-code-related-to-SCM_RIGHTS.";
 filename*1="patch"
Content-Transfer-Encoding: base64

RnJvbSA2M2ZjYWZmZDBiM2QwZGI3ODRjYmUzOTUwNTQ5NzY2OTM2MzU1ZTg0IE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFdlZCwgMTMgTWFyIDIwMjQgMTc6NTk6MDEgLTA2MDAKU3ViamVjdDogW1BBVENIIDIv
Ml0gaW9fdXJpbmc6IGRyb3AgYW55IGNvZGUgcmVsYXRlZCB0byBTQ01fUklHSFRTCgpDb21t
aXQgNmU1ZTZkMjc0OTU2MzA1ZjFmYzAzNDA1MjJiMzhmNWY1YmU3NGJkYiB1cHN0cmVhbS4K
ClRoaXMgaXMgZGVhZCBjb2RlIGFmdGVyIHdlIGRyb3BwZWQgc3VwcG9ydCBmb3IgcGFzc2lu
ZyBpb191cmluZyBmZHMKb3ZlciBTQ01fUklHSFRTLCBnZXQgcmlkIG9mIGl0LgoKU2lnbmVk
LW9mZi1ieTogSmVucyBBeGJvZSA8YXhib2VAa2VybmVsLmRrPgotLS0KIGlvX3VyaW5nL2lv
X3VyaW5nLmMgfCAyMTEgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAzIGluc2VydGlvbnMoKyksIDIwOCBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9pb191cmluZy9pb191cmluZy5jIGIvaW9fdXJpbmcvaW9fdXJp
bmcuYwppbmRleCA1NDFlNmE2OTg1ZWMuLjM4NmIzMmU2ZmQ5YSAxMDA2NDQKLS0tIGEvaW9f
dXJpbmcvaW9fdXJpbmcuYworKysgYi9pb191cmluZy9pb191cmluZy5jCkBAIC02Miw3ICs2
Miw2IEBACiAjaW5jbHVkZSA8bGludXgvbmV0Lmg+CiAjaW5jbHVkZSA8bmV0L3NvY2suaD4K
ICNpbmNsdWRlIDxuZXQvYWZfdW5peC5oPgotI2luY2x1ZGUgPG5ldC9zY20uaD4KICNpbmNs
dWRlIDxsaW51eC9hbm9uX2lub2Rlcy5oPgogI2luY2x1ZGUgPGxpbnV4L3NjaGVkL21tLmg+
CiAjaW5jbHVkZSA8bGludXgvdWFjY2Vzcy5oPgpAQCAtNDQwLDkgKzQzOSw2IEBAIHN0cnVj
dCBpb19yaW5nX2N0eCB7CiAKIAkvKiBLZWVwIHRoaXMgbGFzdCwgd2UgZG9uJ3QgbmVlZCBp
dCBmb3IgdGhlIGZhc3QgcGF0aCAqLwogCXN0cnVjdCB7Ci0JCSNpZiBkZWZpbmVkKENPTkZJ
R19VTklYKQotCQkJc3RydWN0IHNvY2tldAkJKnJpbmdfc29jazsKLQkJI2VuZGlmCiAJCS8q
IGhhc2hlZCBidWZmZXJlZCB3cml0ZSBzZXJpYWxpemF0aW9uICovCiAJCXN0cnVjdCBpb193
cV9oYXNoCQkqaGFzaF9tYXA7CiAKQEAgLTgxNTEsMTUgKzgxNDcsNiBAQCBzdGF0aWMgdm9p
ZCBpb19mcmVlX2ZpbGVfdGFibGVzKHN0cnVjdCBpb19maWxlX3RhYmxlICp0YWJsZSkKIAog
c3RhdGljIHZvaWQgX19pb19zcWVfZmlsZXNfdW5yZWdpc3RlcihzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCkKIHsKLSNpZiBkZWZpbmVkKENPTkZJR19VTklYKQotCWlmIChjdHgtPnJpbmdf
c29jaykgewotCQlzdHJ1Y3Qgc29jayAqc29jayA9IGN0eC0+cmluZ19zb2NrLT5zazsKLQkJ
c3RydWN0IHNrX2J1ZmYgKnNrYjsKLQotCQl3aGlsZSAoKHNrYiA9IHNrYl9kZXF1ZXVlKCZz
b2NrLT5za19yZWNlaXZlX3F1ZXVlKSkgIT0gTlVMTCkKLQkJCWtmcmVlX3NrYihza2IpOwot
CX0KLSNlbHNlCiAJaW50IGk7CiAKIAlmb3IgKGkgPSAwOyBpIDwgY3R4LT5ucl91c2VyX2Zp
bGVzOyBpKyspIHsKQEAgLTgxNjksNyArODE1Niw2IEBAIHN0YXRpYyB2b2lkIF9faW9fc3Fl
X2ZpbGVzX3VucmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCiAJCWlmIChmaWxl
KQogCQkJZnB1dChmaWxlKTsKIAl9Ci0jZW5kaWYKIAlpb19mcmVlX2ZpbGVfdGFibGVzKCZj
dHgtPmZpbGVfdGFibGUpOwogCWlvX3JzcmNfZGF0YV9mcmVlKGN0eC0+ZmlsZV9kYXRhKTsK
IAljdHgtPmZpbGVfZGF0YSA9IE5VTEw7CkBAIC04MzIxLDE3MCArODMwNywxMSBAQCBzdGF0
aWMgc3RydWN0IGlvX3NxX2RhdGEgKmlvX2dldF9zcV9kYXRhKHN0cnVjdCBpb191cmluZ19w
YXJhbXMgKnAsCiAJcmV0dXJuIHNxZDsKIH0KIAotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgp
Ci0vKgotICogRW5zdXJlIHRoZSBVTklYIGdjIGlzIGF3YXJlIG9mIG91ciBmaWxlIHNldCwg
c28gd2UgYXJlIGNlcnRhaW4gdGhhdAotICogdGhlIGlvX3VyaW5nIGNhbiBiZSBzYWZlbHkg
dW5yZWdpc3RlcmVkIG9uIHByb2Nlc3MgZXhpdCwgZXZlbiBpZiB3ZSBoYXZlCi0gKiBsb29w
cyBpbiB0aGUgZmlsZSByZWZlcmVuY2luZy4KLSAqLwotc3RhdGljIGludCBfX2lvX3NxZV9m
aWxlc19zY20oc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIGludCBuciwgaW50IG9mZnNldCkK
LXsKLQlzdHJ1Y3Qgc29jayAqc2sgPSBjdHgtPnJpbmdfc29jay0+c2s7Ci0Jc3RydWN0IHNj
bV9mcF9saXN0ICpmcGw7Ci0Jc3RydWN0IHNrX2J1ZmYgKnNrYjsKLQlpbnQgaSwgbnJfZmls
ZXM7Ci0KLQlmcGwgPSBremFsbG9jKHNpemVvZigqZnBsKSwgR0ZQX0tFUk5FTCk7Ci0JaWYg
KCFmcGwpCi0JCXJldHVybiAtRU5PTUVNOwotCi0Jc2tiID0gYWxsb2Nfc2tiKDAsIEdGUF9L
RVJORUwpOwotCWlmICghc2tiKSB7Ci0JCWtmcmVlKGZwbCk7Ci0JCXJldHVybiAtRU5PTUVN
OwotCX0KLQotCXNrYi0+c2sgPSBzazsKLQlza2ItPnNjbV9pb191cmluZyA9IDE7Ci0KLQlu
cl9maWxlcyA9IDA7Ci0JZnBsLT51c2VyID0gZ2V0X3VpZChjdXJyZW50X3VzZXIoKSk7Ci0J
Zm9yIChpID0gMDsgaSA8IG5yOyBpKyspIHsKLQkJc3RydWN0IGZpbGUgKmZpbGUgPSBpb19m
aWxlX2Zyb21faW5kZXgoY3R4LCBpICsgb2Zmc2V0KTsKLQotCQlpZiAoIWZpbGUpCi0JCQlj
b250aW51ZTsKLQkJZnBsLT5mcFtucl9maWxlc10gPSBnZXRfZmlsZShmaWxlKTsKLQkJdW5p
eF9pbmZsaWdodChmcGwtPnVzZXIsIGZwbC0+ZnBbbnJfZmlsZXNdKTsKLQkJbnJfZmlsZXMr
KzsKLQl9Ci0KLQlpZiAobnJfZmlsZXMpIHsKLQkJZnBsLT5tYXggPSBTQ01fTUFYX0ZEOwot
CQlmcGwtPmNvdW50ID0gbnJfZmlsZXM7Ci0JCVVOSVhDQihza2IpLmZwID0gZnBsOwotCQlz
a2ItPmRlc3RydWN0b3IgPSB1bml4X2Rlc3RydWN0X3NjbTsKLQkJcmVmY291bnRfYWRkKHNr
Yi0+dHJ1ZXNpemUsICZzay0+c2tfd21lbV9hbGxvYyk7Ci0JCXNrYl9xdWV1ZV9oZWFkKCZz
ay0+c2tfcmVjZWl2ZV9xdWV1ZSwgc2tiKTsKLQotCQlmb3IgKGkgPSAwOyBpIDwgbnI7IGkr
KykgewotCQkJc3RydWN0IGZpbGUgKmZpbGUgPSBpb19maWxlX2Zyb21faW5kZXgoY3R4LCBp
ICsgb2Zmc2V0KTsKLQotCQkJaWYgKGZpbGUpCi0JCQkJZnB1dChmaWxlKTsKLQkJfQotCX0g
ZWxzZSB7Ci0JCWtmcmVlX3NrYihza2IpOwotCQlmcmVlX3VpZChmcGwtPnVzZXIpOwotCQlr
ZnJlZShmcGwpOwotCX0KLQotCXJldHVybiAwOwotfQotCi0vKgotICogSWYgVU5JWCBzb2Nr
ZXRzIGFyZSBlbmFibGVkLCBmZCBwYXNzaW5nIGNhbiBjYXVzZSBhIHJlZmVyZW5jZSBjeWNs
ZSB3aGljaAotICogY2F1c2VzIHJlZ3VsYXIgcmVmZXJlbmNlIGNvdW50aW5nIHRvIGJyZWFr
IGRvd24uIFdlIHJlbHkgb24gdGhlIFVOSVgKLSAqIGdhcmJhZ2UgY29sbGVjdGlvbiB0byB0
YWtlIGNhcmUgb2YgdGhpcyBwcm9ibGVtIGZvciB1cy4KLSAqLwotc3RhdGljIGludCBpb19z
cWVfZmlsZXNfc2NtKHN0cnVjdCBpb19yaW5nX2N0eCAqY3R4KQotewotCXVuc2lnbmVkIGxl
ZnQsIHRvdGFsOwotCWludCByZXQgPSAwOwotCi0JdG90YWwgPSAwOwotCWxlZnQgPSBjdHgt
Pm5yX3VzZXJfZmlsZXM7Ci0Jd2hpbGUgKGxlZnQpIHsKLQkJdW5zaWduZWQgdGhpc19maWxl
cyA9IG1pbl90KHVuc2lnbmVkLCBsZWZ0LCBTQ01fTUFYX0ZEKTsKLQotCQlyZXQgPSBfX2lv
X3NxZV9maWxlc19zY20oY3R4LCB0aGlzX2ZpbGVzLCB0b3RhbCk7Ci0JCWlmIChyZXQpCi0J
CQlicmVhazsKLQkJbGVmdCAtPSB0aGlzX2ZpbGVzOwotCQl0b3RhbCArPSB0aGlzX2ZpbGVz
OwotCX0KLQotCWlmICghcmV0KQotCQlyZXR1cm4gMDsKLQotCXdoaWxlICh0b3RhbCA8IGN0
eC0+bnJfdXNlcl9maWxlcykgewotCQlzdHJ1Y3QgZmlsZSAqZmlsZSA9IGlvX2ZpbGVfZnJv
bV9pbmRleChjdHgsIHRvdGFsKTsKLQotCQlpZiAoZmlsZSkKLQkJCWZwdXQoZmlsZSk7Ci0J
CXRvdGFsKys7Ci0JfQotCi0JcmV0dXJuIHJldDsKLX0KLSNlbHNlCi1zdGF0aWMgaW50IGlv
X3NxZV9maWxlc19zY20oc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgpCi17Ci0JcmV0dXJuIDA7
Ci19Ci0jZW5kaWYKLQogc3RhdGljIHZvaWQgaW9fcnNyY19maWxlX3B1dChzdHJ1Y3QgaW9f
cmluZ19jdHggKmN0eCwgc3RydWN0IGlvX3JzcmNfcHV0ICpwcnNyYykKIHsKIAlzdHJ1Y3Qg
ZmlsZSAqZmlsZSA9IHByc3JjLT5maWxlOwotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0J
c3RydWN0IHNvY2sgKnNvY2sgPSBjdHgtPnJpbmdfc29jay0+c2s7Ci0Jc3RydWN0IHNrX2J1
ZmZfaGVhZCBsaXN0LCAqaGVhZCA9ICZzb2NrLT5za19yZWNlaXZlX3F1ZXVlOwotCXN0cnVj
dCBza19idWZmICpza2I7Ci0JaW50IGk7CiAKLQlfX3NrYl9xdWV1ZV9oZWFkX2luaXQoJmxp
c3QpOwotCi0JLyoKLQkgKiBGaW5kIHRoZSBza2IgdGhhdCBob2xkcyB0aGlzIGZpbGUgaW4g
aXRzIFNDTV9SSUdIVFMuIFdoZW4gZm91bmQsCi0JICogcmVtb3ZlIHRoaXMgZW50cnkgYW5k
IHJlYXJyYW5nZSB0aGUgZmlsZSBhcnJheS4KLQkgKi8KLQlza2IgPSBza2JfZGVxdWV1ZSho
ZWFkKTsKLQl3aGlsZSAoc2tiKSB7Ci0JCXN0cnVjdCBzY21fZnBfbGlzdCAqZnA7Ci0KLQkJ
ZnAgPSBVTklYQ0Ioc2tiKS5mcDsKLQkJZm9yIChpID0gMDsgaSA8IGZwLT5jb3VudDsgaSsr
KSB7Ci0JCQlpbnQgbGVmdDsKLQotCQkJaWYgKGZwLT5mcFtpXSAhPSBmaWxlKQotCQkJCWNv
bnRpbnVlOwotCi0JCQl1bml4X25vdGluZmxpZ2h0KGZwLT51c2VyLCBmcC0+ZnBbaV0pOwot
CQkJbGVmdCA9IGZwLT5jb3VudCAtIDEgLSBpOwotCQkJaWYgKGxlZnQpIHsKLQkJCQltZW1t
b3ZlKCZmcC0+ZnBbaV0sICZmcC0+ZnBbaSArIDFdLAotCQkJCQkJbGVmdCAqIHNpemVvZihz
dHJ1Y3QgZmlsZSAqKSk7Ci0JCQl9Ci0JCQlmcC0+Y291bnQtLTsKLQkJCWlmICghZnAtPmNv
dW50KSB7Ci0JCQkJa2ZyZWVfc2tiKHNrYik7Ci0JCQkJc2tiID0gTlVMTDsKLQkJCX0gZWxz
ZSB7Ci0JCQkJX19za2JfcXVldWVfdGFpbCgmbGlzdCwgc2tiKTsKLQkJCX0KLQkJCWZwdXQo
ZmlsZSk7Ci0JCQlmaWxlID0gTlVMTDsKLQkJCWJyZWFrOwotCQl9Ci0KLQkJaWYgKCFmaWxl
KQotCQkJYnJlYWs7Ci0KLQkJX19za2JfcXVldWVfdGFpbCgmbGlzdCwgc2tiKTsKLQotCQlz
a2IgPSBza2JfZGVxdWV1ZShoZWFkKTsKLQl9Ci0KLQlpZiAoc2tiX3BlZWsoJmxpc3QpKSB7
Ci0JCXNwaW5fbG9ja19pcnEoJmhlYWQtPmxvY2spOwotCQl3aGlsZSAoKHNrYiA9IF9fc2ti
X2RlcXVldWUoJmxpc3QpKSAhPSBOVUxMKQotCQkJX19za2JfcXVldWVfdGFpbChoZWFkLCBz
a2IpOwotCQlzcGluX3VubG9ja19pcnEoJmhlYWQtPmxvY2spOwotCX0KLSNlbHNlCiAJZnB1
dChmaWxlKTsKLSNlbmRpZgogfQogCiBzdGF0aWMgdm9pZCBfX2lvX3JzcmNfcHV0X3dvcmso
c3RydWN0IGlvX3JzcmNfbm9kZSAqcmVmX25vZGUpCkBAIC04NTk1LDEyICs4NDIyLDYgQEAg
c3RhdGljIGludCBpb19zcWVfZmlsZXNfcmVnaXN0ZXIoc3RydWN0IGlvX3JpbmdfY3R4ICpj
dHgsIHZvaWQgX191c2VyICphcmcsCiAJCWlvX2ZpeGVkX2ZpbGVfc2V0KGlvX2ZpeGVkX2Zp
bGVfc2xvdCgmY3R4LT5maWxlX3RhYmxlLCBpKSwgZmlsZSk7CiAJfQogCi0JcmV0ID0gaW9f
c3FlX2ZpbGVzX3NjbShjdHgpOwotCWlmIChyZXQpIHsKLQkJX19pb19zcWVfZmlsZXNfdW5y
ZWdpc3RlcihjdHgpOwotCQlyZXR1cm4gcmV0OwotCX0KLQogCWlvX3JzcmNfbm9kZV9zd2l0
Y2goY3R4LCBOVUxMKTsKIAlyZXR1cm4gcmV0Owogb3V0X2ZwdXQ6CkBAIC05NTU3LDEyICs5
Mzc4LDYgQEAgc3RhdGljIHZvaWQgaW9fcmluZ19jdHhfZnJlZShzdHJ1Y3QgaW9fcmluZ19j
dHggKmN0eCkKIAlXQVJOX09OX09OQ0UoIWxpc3RfZW1wdHkoJmN0eC0+cnNyY19yZWZfbGlz
dCkpOwogCVdBUk5fT05fT05DRSghbGxpc3RfZW1wdHkoJmN0eC0+cnNyY19wdXRfbGxpc3Qp
KTsKIAotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0JaWYgKGN0eC0+cmluZ19zb2NrKSB7
Ci0JCWN0eC0+cmluZ19zb2NrLT5maWxlID0gTlVMTDsgLyogc28gdGhhdCBpcHV0KCkgaXMg
Y2FsbGVkICovCi0JCXNvY2tfcmVsZWFzZShjdHgtPnJpbmdfc29jayk7Ci0JfQotI2VuZGlm
CiAJV0FSTl9PTl9PTkNFKCFsaXN0X2VtcHR5KCZjdHgtPmx0aW1lb3V0X2xpc3QpKTsKIAog
CWlmIChjdHgtPm1tX2FjY291bnQpIHsKQEAgLTEwNDk5LDMyICsxMDMxNCwxMiBAQCBzdGF0
aWMgaW50IGlvX3VyaW5nX2luc3RhbGxfZmQoc3RydWN0IGlvX3JpbmdfY3R4ICpjdHgsIHN0
cnVjdCBmaWxlICpmaWxlKQogLyoKICAqIEFsbG9jYXRlIGFuIGFub255bW91cyBmZCwgdGhp
cyBpcyB3aGF0IGNvbnN0aXR1dGVzIHRoZSBhcHBsaWNhdGlvbgogICogdmlzaWJsZSBiYWNr
aW5nIG9mIGFuIGlvX3VyaW5nIGluc3RhbmNlLiBUaGUgYXBwbGljYXRpb24gbW1hcHMgdGhp
cwotICogZmQgdG8gZ2FpbiBhY2Nlc3MgdG8gdGhlIFNRL0NRIHJpbmcgZGV0YWlscy4gSWYg
VU5JWCBzb2NrZXRzIGFyZSBlbmFibGVkLAotICogd2UgaGF2ZSB0byB0aWUgdGhpcyBmZCB0
byBhIHNvY2tldCBmb3IgZmlsZSBnYXJiYWdlIGNvbGxlY3Rpb24gcHVycG9zZXMuCisgKiBm
ZCB0byBnYWluIGFjY2VzcyB0byB0aGUgU1EvQ1EgcmluZyBkZXRhaWxzLgogICovCiBzdGF0
aWMgc3RydWN0IGZpbGUgKmlvX3VyaW5nX2dldF9maWxlKHN0cnVjdCBpb19yaW5nX2N0eCAq
Y3R4KQogewotCXN0cnVjdCBmaWxlICpmaWxlOwotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgp
Ci0JaW50IHJldDsKLQotCXJldCA9IHNvY2tfY3JlYXRlX2tlcm4oJmluaXRfbmV0LCBQRl9V
TklYLCBTT0NLX1JBVywgSVBQUk9UT19JUCwKLQkJCQkmY3R4LT5yaW5nX3NvY2spOwotCWlm
IChyZXQpCi0JCXJldHVybiBFUlJfUFRSKHJldCk7Ci0jZW5kaWYKLQotCWZpbGUgPSBhbm9u
X2lub2RlX2dldGZpbGUoIltpb191cmluZ10iLCAmaW9fdXJpbmdfZm9wcywgY3R4LAotCQkJ
CQlPX1JEV1IgfCBPX0NMT0VYRUMpOwotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0JaWYg
KElTX0VSUihmaWxlKSkgewotCQlzb2NrX3JlbGVhc2UoY3R4LT5yaW5nX3NvY2spOwotCQlj
dHgtPnJpbmdfc29jayA9IE5VTEw7Ci0JfSBlbHNlIHsKLQkJY3R4LT5yaW5nX3NvY2stPmZp
bGUgPSBmaWxlOwotCX0KLSNlbmRpZgotCXJldHVybiBmaWxlOworCXJldHVybiBhbm9uX2lu
b2RlX2dldGZpbGUoIltpb191cmluZ10iLCAmaW9fdXJpbmdfZm9wcywgY3R4LAorCQkJCSAg
T19SRFdSIHwgT19DTE9FWEVDKTsKIH0KIAogc3RhdGljIGludCBpb191cmluZ19jcmVhdGUo
dW5zaWduZWQgZW50cmllcywgc3RydWN0IGlvX3VyaW5nX3BhcmFtcyAqcCwKLS0gCjIuNDMu
MAoK
--------------rOU1oqdtodmFhQqFExsoYY2u
Content-Type: text/x-patch; charset=UTF-8;
 name="5.10-5.15-0001-io_uring-unix-drop-usage-of-io_uring-socket.patch"
Content-Disposition: attachment;
 filename*0="5.10-5.15-0001-io_uring-unix-drop-usage-of-io_uring-socket.p";
 filename*1="atch"
Content-Transfer-Encoding: base64

RnJvbSA3YzM2ZmFlOTYxNGY0OGM5NzFjNDU4ZjNiYjEyYjk3ZDM0MTRhYmFiIE1vbiBTZXAg
MTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkRh
dGU6IFdlZCwgMTMgTWFyIDIwMjQgMTc6NTQ6NDkgLTA2MDAKU3ViamVjdDogW1BBVENIIDEv
Ml0gaW9fdXJpbmcvdW5peDogZHJvcCB1c2FnZSBvZiBpb191cmluZyBzb2NrZXQKCkNvbW1p
dCBhNDEwNDgyMWFkNjUxZDhhMGIzNzRmMGIyNDc0YzM0NWJiYjQyZjgyIHVwc3RyZWFtLgoK
U2luY2Ugd2Ugbm8gbG9uZ2VyIGFsbG93IHNlbmRpbmcgaW9fdXJpbmcgZmRzIG92ZXIgU0NN
X1JJR0hUUywgbW92ZSB0bwp1c2luZyBpb19pc191cmluZ19mb3BzKCkgdG8gZGV0ZWN0IHdo
ZXRoZXIgdGhpcyBpcyBhIGlvX3VyaW5nIGZkIG9yIG5vdC4KV2l0aCB0aGF0IGRvbmUsIGtp
bGwgb2ZmIGlvX3VyaW5nX2dldF9zb2NrZXQoKSBhcyBub2JvZHkgY2FsbHMgaXQKYW55bW9y
ZS4KClRoaXMgaXMgaW4gcHJlcGFyYXRpb24gdG8geWFua2luZyBvdXQgdGhlIHJlc3Qgb2Yg
dGhlIGNvcmUgcmVsYXRlZCB0bwp1bml4IGdjIHdpdGggaW9fdXJpbmcuCgpTaWduZWQtb2Zm
LWJ5OiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+Ci0tLQogaW5jbHVkZS9saW51eC9p
b191cmluZy5oIHwgMTAgKysrKystLS0tLQogaW9fdXJpbmcvaW9fdXJpbmcuYyAgICAgIHwg
MTggKysrKystLS0tLS0tLS0tLS0tCiBuZXQvY29yZS9zY20uYyAgICAgICAgICAgfCAgMiAr
LQogbmV0L3VuaXgvc2NtLmMgICAgICAgICAgIHwgIDQgKy0tLQogNCBmaWxlcyBjaGFuZ2Vk
LCAxMiBpbnNlcnRpb25zKCspLCAyMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9pbmNs
dWRlL2xpbnV4L2lvX3VyaW5nLmggYi9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nLmgKaW5kZXgg
NjQ5YTRkN2MyNDFiLi41NWQwOWY1OTRjZDEgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgv
aW9fdXJpbmcuaAorKysgYi9pbmNsdWRlL2xpbnV4L2lvX3VyaW5nLmgKQEAgLTYsOSArNiw5
IEBACiAjaW5jbHVkZSA8bGludXgveGFycmF5Lmg+CiAKICNpZiBkZWZpbmVkKENPTkZJR19J
T19VUklORykKLXN0cnVjdCBzb2NrICppb191cmluZ19nZXRfc29ja2V0KHN0cnVjdCBmaWxl
ICpmaWxlKTsKIHZvaWQgX19pb191cmluZ19jYW5jZWwoYm9vbCBjYW5jZWxfYWxsKTsKIHZv
aWQgX19pb191cmluZ19mcmVlKHN0cnVjdCB0YXNrX3N0cnVjdCAqdHNrKTsKK2Jvb2wgaW9f
aXNfdXJpbmdfZm9wcyhzdHJ1Y3QgZmlsZSAqZmlsZSk7CiAKIHN0YXRpYyBpbmxpbmUgdm9p
ZCBpb191cmluZ19maWxlc19jYW5jZWwodm9pZCkKIHsKQEAgLTI2LDEwICsyNiw2IEBAIHN0
YXRpYyBpbmxpbmUgdm9pZCBpb191cmluZ19mcmVlKHN0cnVjdCB0YXNrX3N0cnVjdCAqdHNr
KQogCQlfX2lvX3VyaW5nX2ZyZWUodHNrKTsKIH0KICNlbHNlCi1zdGF0aWMgaW5saW5lIHN0
cnVjdCBzb2NrICppb191cmluZ19nZXRfc29ja2V0KHN0cnVjdCBmaWxlICpmaWxlKQotewot
CXJldHVybiBOVUxMOwotfQogc3RhdGljIGlubGluZSB2b2lkIGlvX3VyaW5nX3Rhc2tfY2Fu
Y2VsKHZvaWQpCiB7CiB9CkBAIC0zOSw2ICszNSwxMCBAQCBzdGF0aWMgaW5saW5lIHZvaWQg
aW9fdXJpbmdfZmlsZXNfY2FuY2VsKHZvaWQpCiBzdGF0aWMgaW5saW5lIHZvaWQgaW9fdXJp
bmdfZnJlZShzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaykKIHsKIH0KK3N0YXRpYyBpbmxpbmUg
Ym9vbCBpb19pc191cmluZ19mb3BzKHN0cnVjdCBmaWxlICpmaWxlKQoreworCXJldHVybiBm
YWxzZTsKK30KICNlbmRpZgogCiAjZW5kaWYKZGlmZiAtLWdpdCBhL2lvX3VyaW5nL2lvX3Vy
aW5nLmMgYi9pb191cmluZy9pb191cmluZy5jCmluZGV4IDU1ZmQ2ZDk4ZmUxMi4uNTQxZTZh
Njk4NWVjIDEwMDY0NAotLS0gYS9pb191cmluZy9pb191cmluZy5jCisrKyBiL2lvX3VyaW5n
L2lvX3VyaW5nLmMKQEAgLTExMTYsMTkgKzExMTYsNiBAQCBzdGF0aWMgc3RydWN0IGttZW1f
Y2FjaGUgKnJlcV9jYWNoZXA7CiAKIHN0YXRpYyBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRp
b25zIGlvX3VyaW5nX2ZvcHM7CiAKLXN0cnVjdCBzb2NrICppb191cmluZ19nZXRfc29ja2V0
KHN0cnVjdCBmaWxlICpmaWxlKQotewotI2lmIGRlZmluZWQoQ09ORklHX1VOSVgpCi0JaWYg
KGZpbGUtPmZfb3AgPT0gJmlvX3VyaW5nX2ZvcHMpIHsKLQkJc3RydWN0IGlvX3JpbmdfY3R4
ICpjdHggPSBmaWxlLT5wcml2YXRlX2RhdGE7Ci0KLQkJcmV0dXJuIGN0eC0+cmluZ19zb2Nr
LT5zazsKLQl9Ci0jZW5kaWYKLQlyZXR1cm4gTlVMTDsKLX0KLUVYUE9SVF9TWU1CT0woaW9f
dXJpbmdfZ2V0X3NvY2tldCk7Ci0KIHN0YXRpYyBpbmxpbmUgdm9pZCBpb190d19sb2NrKHN0
cnVjdCBpb19yaW5nX2N0eCAqY3R4LCBib29sICpsb2NrZWQpCiB7CiAJaWYgKCEqbG9ja2Vk
KSB7CkBAIC0xMDQ0NSw2ICsxMDQzMiwxMSBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IGZpbGVf
b3BlcmF0aW9ucyBpb191cmluZ19mb3BzID0gewogI2VuZGlmCiB9OwogCitib29sIGlvX2lz
X3VyaW5nX2ZvcHMoc3RydWN0IGZpbGUgKmZpbGUpCit7CisJcmV0dXJuIGZpbGUtPmZfb3Ag
PT0gJmlvX3VyaW5nX2ZvcHM7Cit9CisKIHN0YXRpYyBpbnQgaW9fYWxsb2NhdGVfc2NxX3Vy
aW5ncyhzdHJ1Y3QgaW9fcmluZ19jdHggKmN0eCwKIAkJCQkgIHN0cnVjdCBpb191cmluZ19w
YXJhbXMgKnApCiB7CmRpZmYgLS1naXQgYS9uZXQvY29yZS9zY20uYyBiL25ldC9jb3JlL3Nj
bS5jCmluZGV4IGU3NjJhNGI4YTFkMi4uYTg3N2M0ZWY0YzI1IDEwMDY0NAotLS0gYS9uZXQv
Y29yZS9zY20uYworKysgYi9uZXQvY29yZS9zY20uYwpAQCAtMTA1LDcgKzEwNSw3IEBAIHN0
YXRpYyBpbnQgc2NtX2ZwX2NvcHkoc3RydWN0IGNtc2doZHIgKmNtc2csIHN0cnVjdCBzY21f
ZnBfbGlzdCAqKmZwbHApCiAJCWlmIChmZCA8IDAgfHwgIShmaWxlID0gZmdldF9yYXcoZmQp
KSkKIAkJCXJldHVybiAtRUJBREY7CiAJCS8qIGRvbid0IGFsbG93IGlvX3VyaW5nIGZpbGVz
ICovCi0JCWlmIChpb191cmluZ19nZXRfc29ja2V0KGZpbGUpKSB7CisJCWlmIChpb19pc191
cmluZ19mb3BzKGZpbGUpKSB7CiAJCQlmcHV0KGZpbGUpOwogCQkJcmV0dXJuIC1FSU5WQUw7
CiAJCX0KZGlmZiAtLWdpdCBhL25ldC91bml4L3NjbS5jIGIvbmV0L3VuaXgvc2NtLmMKaW5k
ZXggZThlMmEwMGJiMGY1Li5kMTA0OGI0YzJiYWEgMTAwNjQ0Ci0tLSBhL25ldC91bml4L3Nj
bS5jCisrKyBiL25ldC91bml4L3NjbS5jCkBAIC0zNCwxMCArMzQsOCBAQCBzdHJ1Y3Qgc29j
ayAqdW5peF9nZXRfc29ja2V0KHN0cnVjdCBmaWxlICpmaWxwKQogCQkvKiBQRl9VTklYID8g
Ki8KIAkJaWYgKHMgJiYgc29jay0+b3BzICYmIHNvY2stPm9wcy0+ZmFtaWx5ID09IFBGX1VO
SVgpCiAJCQl1X3NvY2sgPSBzOwotCX0gZWxzZSB7Ci0JCS8qIENvdWxkIGJlIGFuIGlvX3Vy
aW5nIGluc3RhbmNlICovCi0JCXVfc29jayA9IGlvX3VyaW5nX2dldF9zb2NrZXQoZmlscCk7
CiAJfQorCiAJcmV0dXJuIHVfc29jazsKIH0KIEVYUE9SVF9TWU1CT0wodW5peF9nZXRfc29j
a2V0KTsKLS0gCjIuNDMuMAoK

--------------rOU1oqdtodmFhQqFExsoYY2u--

